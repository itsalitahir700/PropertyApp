{"ast":null,"code":"import _Button from \"antd/lib/button\";\nimport _Switch from \"antd/lib/switch\";\nimport _Input from \"antd/lib/input\";\nvar _jsxFileName = \"C:\\\\wamp64\\\\www\\\\Reactapps\\\\my-app\\\\Apnaghar-frontend\\\\TripFinder\\\\packages\\\\hotel-next\\\\container\\\\Auth\\\\SignIn\\\\SignInForm.js\";\nvar __jsx = React.createElement;\nimport React, { useContext } from 'react';\nimport Link from 'next/link';\nimport { useForm, Controller } from 'react-hook-form';\nimport { MdLockOpen } from 'react-icons/md';\nimport FormControl from 'components/UI/FormControl/FormControl';\nimport { AuthContext } from 'context/AuthProvider';\nimport { FORGET_PASSWORD_PAGE } from 'settings/constant';\nimport { FieldWrapper, SwitchWrapper, Label } from '../Auth.style';\n\nconst SignInForm = () => {\n  var _errors$email, _errors$email2, _errors$password, _errors$password2, _errors$password3;\n\n  const {\n    signIn\n  } = useContext(AuthContext);\n  const {\n    control,\n    errors,\n    handleSubmit\n  } = useForm();\n\n  const onSubmit = data => {\n    signIn(data);\n  };\n\n  return __jsx(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, __jsx(FormControl, {\n    label: \"Email\",\n    htmlFor: \"email\",\n    error: errors.email && __jsx(React.Fragment, null, ((_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.type) === 'required' && __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }\n    }, \"This field is required!\"), ((_errors$email2 = errors.email) === null || _errors$email2 === void 0 ? void 0 : _errors$email2.type) === 'pattern' && __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }\n    }, \"Please enter a valid email address!\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, __jsx(Controller, {\n    as: __jsx(_Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 15\n      }\n    }),\n    type: \"email\",\n    id: \"email\",\n    name: \"email\",\n    defaultValue: \"\",\n    control: control,\n    rules: {\n      required: true,\n      pattern: /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  })), __jsx(FormControl, {\n    label: \"Password\",\n    htmlFor: \"password\",\n    error: errors.password && __jsx(React.Fragment, null, ((_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.type) === 'required' && __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }, \"This field is required!\"), ((_errors$password2 = errors.password) === null || _errors$password2 === void 0 ? void 0 : _errors$password2.type) === 'minLength' && __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, \"Password must be at lest 6 characters!\"), ((_errors$password3 = errors.password) === null || _errors$password3 === void 0 ? void 0 : _errors$password3.type) === 'maxLength' && __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, \"Password must not be longer than 20 characters!\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, __jsx(Controller, {\n    as: __jsx(_Input.Password, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 15\n      }\n    }),\n    defaultValue: \"\",\n    control: control,\n    id: \"password\",\n    name: \"password\",\n    rules: {\n      required: true,\n      minLength: 6,\n      maxLength: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  })), __jsx(FieldWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, __jsx(SwitchWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, __jsx(Controller, {\n    as: __jsx(_Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }),\n    name: \"rememberMe\",\n    defaultValue: false,\n    valueName: \"checked\",\n    control: control,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }), __jsx(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, \"Remember Me\")), __jsx(Link, {\n    href: FORGET_PASSWORD_PAGE,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, \"Forget Password ?\"))), __jsx(_Button, {\n    className: \"signin-btn\",\n    type: \"primary\",\n    htmlType: \"submit\",\n    size: \"large\",\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, __jsx(MdLockOpen, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }), \"Login\"));\n};\n\nexport default SignInForm;","map":{"version":3,"sources":["C:/wamp64/www/Reactapps/my-app/Apnaghar-frontend/TripFinder/packages/hotel-next/container/Auth/SignIn/SignInForm.js"],"names":["React","useContext","Link","useForm","Controller","MdLockOpen","FormControl","AuthContext","FORGET_PASSWORD_PAGE","FieldWrapper","SwitchWrapper","Label","SignInForm","signIn","control","errors","handleSubmit","onSubmit","data","email","type","required","pattern","password","minLength","maxLength","width"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\r\nimport Link from 'next/link';\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport { MdLockOpen } from 'react-icons/md';\r\nimport { Input, Switch, Button } from 'antd';\r\nimport FormControl from 'components/UI/FormControl/FormControl';\r\nimport { AuthContext } from 'context/AuthProvider';\r\nimport { FORGET_PASSWORD_PAGE } from 'settings/constant';\r\nimport { FieldWrapper, SwitchWrapper, Label } from '../Auth.style';\r\n\r\nconst SignInForm = () => {\r\n  const { signIn } = useContext(AuthContext);\r\n  const { control, errors, handleSubmit } = useForm();\r\n  const onSubmit = (data) => {\r\n    signIn(data);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      <FormControl\r\n        label=\"Email\"\r\n        htmlFor=\"email\"\r\n        error={\r\n          errors.email && (\r\n            <>\r\n              {errors.email?.type === 'required' && (\r\n                <span>This field is required!</span>\r\n              )}\r\n              {errors.email?.type === 'pattern' && (\r\n                <span>Please enter a valid email address!</span>\r\n              )}\r\n            </>\r\n          )\r\n        }\r\n      >\r\n        <Controller\r\n          as={<Input />}\r\n          type=\"email\"\r\n          id=\"email\"\r\n          name=\"email\"\r\n          defaultValue=\"\"\r\n          control={control}\r\n          rules={{\r\n            required: true,\r\n            pattern: /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/,\r\n          }}\r\n        />\r\n      </FormControl>\r\n      <FormControl\r\n        label=\"Password\"\r\n        htmlFor=\"password\"\r\n        error={\r\n          errors.password && (\r\n            <>\r\n              {errors.password?.type === 'required' && (\r\n                <span>This field is required!</span>\r\n              )}\r\n              {errors.password?.type === 'minLength' && (\r\n                <span>Password must be at lest 6 characters!</span>\r\n              )}\r\n              {errors.password?.type === 'maxLength' && (\r\n                <span>Password must not be longer than 20 characters!</span>\r\n              )}\r\n            </>\r\n          )\r\n        }\r\n      >\r\n        <Controller\r\n          as={<Input.Password />}\r\n          defaultValue=\"\"\r\n          control={control}\r\n          id=\"password\"\r\n          name=\"password\"\r\n          rules={{ required: true, minLength: 6, maxLength: 20 }}\r\n        />\r\n      </FormControl>\r\n      <FieldWrapper>\r\n        <SwitchWrapper>\r\n          <Controller\r\n            as={<Switch />}\r\n            name=\"rememberMe\"\r\n            defaultValue={false}\r\n            valueName=\"checked\"\r\n            control={control}\r\n          />\r\n          <Label>Remember Me</Label>\r\n        </SwitchWrapper>\r\n        <Link href={FORGET_PASSWORD_PAGE}>\r\n          <a>Forget Password ?</a>\r\n        </Link>\r\n      </FieldWrapper>\r\n      <Button\r\n        className=\"signin-btn\"\r\n        type=\"primary\"\r\n        htmlType=\"submit\"\r\n        size=\"large\"\r\n        style={{ width: '100%' }}\r\n      >\r\n        <MdLockOpen />\r\n        Login\r\n      </Button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SignInForm;\r\n"]},"metadata":{},"sourceType":"module"}