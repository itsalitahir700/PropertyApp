{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _Card from \"antd/lib/card\";\nimport _Button from \"antd/lib/button\";\nimport _Row from \"antd/lib/row\";\nimport _Col from \"antd/lib/col\";\nimport _Select from \"antd/lib/select\";\nimport _Form from \"antd/lib/form\";\nimport _Radio from \"antd/lib/radio\";\nimport _Alert from \"antd/lib/alert\";\nimport _Input from \"antd/lib/input\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _message from \"antd/lib/message\";\nimport _Upload from \"antd/lib/upload\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\wamp64\\\\www\\\\Reactapps\\\\my-app\\\\Apnaghar-frontend\\\\TripFinder\\\\packages\\\\hotel-next\\\\container\\\\AddListing\\\\AddListing.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport { padding } from \"styled-system\";\nimport axios from \"axios\";\nimport { getPropType, getPropSubType, getCities, getLocations, getCurrency, getArea } from \"../../settings/service\";\n\nvar Addlisting = function Addlisting() {\n  _s();\n\n  var _useState = useState(false),\n      loading = _useState[0],\n      setloading = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      imageUrl = _useState2[0],\n      setimageUrl = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      purpose = _useState3[0],\n      setpurpose = _useState3[1];\n\n  var _useState4 = useState(\"\"),\n      city = _useState4[0],\n      setCity = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      location = _useState5[0],\n      setLocation = _useState5[1];\n\n  var _useState6 = useState(\"\"),\n      title = _useState6[0],\n      setTitle = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      details = _useState7[0],\n      setDetails = _useState7[1];\n\n  var _useState8 = useState(\"\"),\n      price = _useState8[0],\n      setPrice = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      pricecurrency = _useState9[0],\n      setCurrency = _useState9[1];\n\n  var _useState10 = useState(\"\"),\n      localArea = _useState10[0],\n      setLocalArea = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      areaUnit = _useState11[0],\n      setareaUnit = _useState11[1];\n\n  var _useState12 = useState(\"\"),\n      bedrooms = _useState12[0],\n      setBedrooms = _useState12[1];\n\n  var _useState13 = useState(\"\"),\n      bathrooms = _useState13[0],\n      setBathrooms = _useState13[1];\n\n  var _useState14 = useState(\"\"),\n      expireAfter = _useState14[0],\n      setExpireAfter = _useState14[1];\n\n  var _useState15 = useState(\"\"),\n      phone = _useState15[0],\n      setPhone = _useState15[1];\n\n  var _useState16 = useState(\"\"),\n      email = _useState16[0],\n      setEmail = _useState16[1];\n\n  var _useState17 = useState([]),\n      files = _useState17[0],\n      setFiles = _useState17[1]; // API RESULTS\n\n\n  var _useState18 = useState([]),\n      proptypedata = _useState18[0],\n      setproptypedata = _useState18[1];\n\n  var _useState19 = useState([]),\n      citieslist = _useState19[0],\n      setciteslist = _useState19[1];\n\n  var _useState20 = useState([]),\n      locationslist = _useState20[0],\n      setlocationslist = _useState20[1];\n\n  var _useState21 = useState([]),\n      currencylist = _useState21[0],\n      setcurrencylist = _useState21[1];\n\n  var _useState22 = useState([]),\n      proptypevalue = _useState22[0],\n      setproptypevalue = _useState22[1];\n\n  var _useState23 = useState([]),\n      propsubtypedata = _useState23[0],\n      setpropsubtypedata = _useState23[1];\n\n  var _useState24 = useState([]),\n      propsubtypedataall = _useState24[0],\n      setpropsubtypedataall = _useState24[1];\n\n  var _useState25 = useState([]),\n      arealist = _useState25[0],\n      setarealist = _useState25[1];\n\n  var propType = \"\";\n  var propsubType = \"\";\n  var cities = \"\";\n  var locations = \"\";\n  var currency = \"\";\n  var area = \"\";\n  var Dragger = _Upload.Dragger;\n  var props = {\n    name: \"file\",\n    multiple: true,\n    action: \"https://www.mocky.io/v2/5cc8019d300000980a055e76\",\n\n    onChange(info) {\n      var status = info.file.status;\n\n      if (status !== \"uploading\") {\n        console.log(info.file, info.fileList);\n      }\n\n      if (status === \"done\") {\n        _message.success(\"\".concat(info.file.name, \" file uploaded successfully.\"));\n      } else if (status === \"error\") {\n        _message.error(\"\".concat(info.file.name, \" file upload failed.\"));\n      }\n    }\n\n  };\n  useEffect(function () {\n    functproptype();\n    functcities();\n    functcurrency();\n    funcpropsbtype();\n    functarea();\n  }, []);\n\n  function functproptype() {\n    return _functproptype.apply(this, arguments);\n  }\n\n  function _functproptype() {\n    _functproptype = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return getPropType();\n\n            case 2:\n              propType = _context.sent;\n              setproptypedata(propType.data);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _functproptype.apply(this, arguments);\n  }\n\n  function functcities() {\n    return _functcities.apply(this, arguments);\n  }\n\n  function _functcities() {\n    _functcities = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return getCities();\n\n            case 2:\n              cities = _context2.sent;\n              setciteslist(cities.data);\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return _functcities.apply(this, arguments);\n  }\n\n  function functlocation(_x) {\n    return _functlocation.apply(this, arguments);\n  }\n\n  function _functlocation() {\n    _functlocation = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(cityId) {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return getLocations(cityId);\n\n            case 2:\n              locations = _context3.sent;\n              setlocationslist(locations.data);\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n    return _functlocation.apply(this, arguments);\n  }\n\n  function functcurrency() {\n    return _functcurrency.apply(this, arguments);\n  }\n\n  function _functcurrency() {\n    _functcurrency = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return getCurrency();\n\n            case 2:\n              currency = _context4.sent;\n              setcurrencylist(currency.data);\n\n            case 4:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n    return _functcurrency.apply(this, arguments);\n  }\n\n  function funcpropsbtype() {\n    return _funcpropsbtype.apply(this, arguments);\n  }\n\n  function _funcpropsbtype() {\n    _funcpropsbtype = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return getPropSubType();\n\n            case 2:\n              propsubType = _context5.sent;\n              setpropsubtypedataall(propsubType.data);\n\n            case 4:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n    return _funcpropsbtype.apply(this, arguments);\n  }\n\n  function functarea() {\n    return _functarea.apply(this, arguments);\n  }\n\n  function _functarea() {\n    _functarea = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return getArea();\n\n            case 2:\n              area = _context6.sent;\n              setarealist(area.data);\n\n            case 4:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n    return _functarea.apply(this, arguments);\n  }\n\n  var handleSetProperty = function handleSetProperty(e) {\n    var main_property_cat = e.target.value;\n    setproptypevalue(e.target.value);\n    var filtered_sub_cat = propsubtypedataall.filter(function (a) {\n      return a.ptypeCat == main_property_cat;\n    });\n    setpropsubtypedata(filtered_sub_cat);\n  };\n\n  console.log(proptypedata, \"propslist\");\n  console.log(citieslist, \"citieslist\");\n  console.log(locationslist, \"locationslist\");\n  console.log(currencylist, \"currencylist\");\n  console.log(arealist, \"arealist\");\n  console.log(files, \"files\");\n\n  var handleimage = function handleimage(event) {\n    console.log(\"images\", event.target.files);\n    setFiles(Array.from(event.target.files));\n  };\n\n  var submitHandler = function submitHandler(e) {\n    var username = \"apna\";\n    var password = \"apnaghar1234\";\n    var credentials = Buffer.from(username + \":\" + password).toString(\"base64\");\n    var basicAuth = \"Basic \" + credentials;\n    var data = {\n      newPost: {\n        postPurpose: \"B\",\n        propType: \"House\",\n        postTitle: \"Brand New Double Unit House Is Available For Sale\",\n        postDescription: \"Newly Constructed House Outclass Latest Design House Available For Sale In Dha Phase 1Sector D, Islamabad.\",\n        postLocation: \"F-8\",\n        postCity: 1,\n        postCountry: 1,\n        postTel: \"03135189421\",\n        postPrice: 20000,\n        postPriceCurrency: 1,\n        postPropArea: 30000,\n        postPropAreaUnit: \"SQF\",\n        postConstructionStatus: \"1\",\n        postPropDeveloper: \"demoData\"\n      },\n      files: {\n        files\n      }\n    };\n    axios.post(\"http://ec2-13-229-109-204.ap-southeast-1.compute.amazonaws.com:8080/apna/v1/posts\", {\n      data\n    }, {\n      headers: {\n        Authorization: basicAuth,\n        Cookie: \"JSESSIONID=E2A8BF2571BA6B875803BD545D43BBD6\"\n      }\n    }).then(function (res) {\n      console.log(\"response\", res); // console.log(res.data);\n    });\n  };\n\n  var TextArea = _Input.TextArea;\n  return __jsx(_Card, {\n    style: {\n      paddingLeft: \"10rem\",\n      paddingRight: \"10rem\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 5\n    }\n  }, __jsx(_Alert, {\n    message: \"PROPERTY TYPE AND LOCATION\",\n    type: \"success\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }\n  }), __jsx(_Form, {\n    labelCol: {\n      span: 4\n    },\n    wrapperCol: {\n      span: 14\n    },\n    layout: \"horizontal\",\n    style: {\n      marginTop: \"20px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }\n  }, __jsx(_Form.Item, {\n    label: \"Purpose\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 9\n    }\n  }, __jsx(_Radio.Group, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 11\n    }\n  }, __jsx(_Radio.Button, {\n    onClick: function onClick(e) {\n      return setpurpose(e.target.value);\n    },\n    value: \"B\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }\n  }, \"Buy\"), __jsx(_Radio.Button, {\n    onClick: function onClick(e) {\n      return setpurpose(e.target.value);\n    },\n    value: \"R\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }\n  }, \"Rent\"), __jsx(_Radio.Button, {\n    onClick: function onClick(e) {\n      return setpurpose(e.target.value);\n    },\n    value: \"P\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }\n  }, \"Project\"))), __jsx(_Form.Item, {\n    label: \"Property Type\",\n    name: \"size\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 9\n    }\n  }, __jsx(_Radio.Group, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 11\n    }\n  }, proptypedata && proptypedata.length !== 0 ? proptypedata.map(function (item) {\n    return __jsx(\"span\", {\n      key: item.code,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 21\n      }\n    }, __jsx(_Radio.Button, {\n      value: item.code,\n      onClick: handleSetProperty,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 23\n      }\n    }, item.name));\n  }) : \"No Records Found\"), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 11\n    }\n  }), __jsx(_Radio.Group, {\n    style: {\n      marginTop: \"5px\",\n      marginLeft: \"20px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 11\n    }\n  }, propsubtypedata && propsubtypedata.length !== 0 ? propsubtypedata.map(function (item, index) {\n    return __jsx(\"span\", {\n      key: item.index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 21\n      }\n    }, __jsx(_Radio.Button, {\n      value: item.ptypeName,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 23\n      }\n    }, item.ptypeName));\n  }) : \"No Records Found\")), __jsx(_Form.Item, {\n    label: \"Select city\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 9\n    }\n  }, __jsx(_Select, {\n    value: city,\n    onChange: function onChange(e) {\n      setCity(e);\n      functlocation(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 11\n    }\n  }, citieslist && citieslist.length !== 0 ? citieslist.map(function (item, index) {\n    return __jsx(_Select.Option, {\n      value: item.cityId,\n      key: item.cityId,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 21\n      }\n    }, item.cityName);\n  }) : \"No Records Found\")), __jsx(_Form.Item, {\n    label: \"Select Location\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 9\n    }\n  }, __jsx(_Select, {\n    value: location,\n    onChange: function onChange(e) {\n      return setLocation(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 11\n    }\n  }, locationslist && locationslist.length !== 0 ? locationslist.map(function (item, index) {\n    return __jsx(_Select.Option, {\n      value: item.plName,\n      key: item.plName,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 21\n      }\n    }, item.plName);\n  }) : \"No Records Found\"))), __jsx(_Alert, {\n    message: \"PROPERTY DETAILS\",\n    type: \"success\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }\n  }), __jsx(_Form, {\n    labelCol: {\n      span: 4\n    },\n    wrapperCol: {\n      span: 14\n    },\n    layout: \"horizontal\",\n    style: {\n      marginTop: \"20px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }\n  }, __jsx(_Form.Item, {\n    label: \"Property Title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 9\n    }\n  }, __jsx(_Input, {\n    value: title,\n    onChange: function onChange(e) {\n      return setTitle(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 11\n    }\n  })), __jsx(_Form.Item, {\n    label: \"Property Details\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 9\n    }\n  }, __jsx(TextArea, {\n    value: details,\n    onChange: function onChange(e) {\n      return setDetails(e.target.value);\n    },\n    rows: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 11\n    }\n  })), __jsx(_Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 9\n    }\n  }, __jsx(_Col, {\n    lg: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 11\n    }\n  }, __jsx(_Form.Item, {\n    label: \"All inclusive Price\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 13\n    }\n  }, __jsx(_Input, {\n    value: price,\n    onChange: function onChange(e) {\n      return setPrice(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 15\n    }\n  }))), __jsx(_Col, {\n    lg: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 11\n    }\n  }, __jsx(_Form.Item, {\n    label: \"Select Currency\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 13\n    }\n  }, __jsx(_Select, {\n    value: pricecurrency,\n    onChange: function onChange(e) {\n      return setCurrency(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 15\n    }\n  }, currencylist && currencylist.length !== 0 ? currencylist.map(function (item, index) {\n    return __jsx(_Select.Option, {\n      value: item.currencyCode,\n      key: item.currencyCode,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 25\n      }\n    }, item.currencyCode);\n  }) : \"No Records Found\")))), __jsx(_Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 9\n    }\n  }, __jsx(_Col, {\n    lg: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 11\n    }\n  }, __jsx(_Form.Item, {\n    label: \"Land Area\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 13\n    }\n  }, __jsx(_Input, {\n    onChange: function onChange(e) {\n      return setLocalArea(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 15\n    }\n  }))), __jsx(_Col, {\n    lg: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 11\n    }\n  }, __jsx(_Form.Item, {\n    label: \"Area Unit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 13\n    }\n  }, __jsx(_Select, {\n    value: areaUnit,\n    onChange: function onChange(e) {\n      return setareaUnit(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 15\n    }\n  }, arealist && arealist.length !== 0 ? arealist.map(function (item, index) {\n    return __jsx(_Select.Option, {\n      value: item.areaUnitCode,\n      key: item.areaUnitCode,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 25\n      }\n    }, item.areaUnitName);\n  }) : \"No Records Found\")))), __jsx(_Form.Item, {\n    label: \"Bedrooms\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 9\n    }\n  }, __jsx(_Select, {\n    value: bedrooms,\n    onChange: function onChange(e) {\n      return setBedrooms(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 11\n    }\n  }, __jsx(_Select.Option, {\n    value: \"demo\",\n    selected: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 13\n    }\n  }, \"Islamabad\"), __jsx(_Select.Option, {\n    value: \"1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 13\n    }\n  }, \"1\"), __jsx(_Select.Option, {\n    value: \"2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 13\n    }\n  }, \"2\"))), __jsx(_Form.Item, {\n    label: \"Bathrooms\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 9\n    }\n  }, __jsx(_Select, {\n    value: bathrooms,\n    onChange: function onChange(e) {\n      return setBathrooms(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 11\n    }\n  }, __jsx(_Select.Option, {\n    value: \"demo\",\n    selected: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 13\n    }\n  }, \"Islamabad\"), __jsx(_Select.Option, {\n    value: \"1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 13\n    }\n  }, \"1\"), __jsx(_Select.Option, {\n    value: \"2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 13\n    }\n  }, \"2\"))), __jsx(_Form.Item, {\n    label: \"Expires After\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 9\n    }\n  }, __jsx(_Select, {\n    value: expireAfter,\n    onChange: function onChange(e) {\n      return setExpireAfter(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 11\n    }\n  }, __jsx(_Select.Option, {\n    value: \"6 Months\",\n    selected: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 13\n    }\n  }, \"6 Months\"), __jsx(_Select.Option, {\n    value: \"1 Year\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 13\n    }\n  }, \"1 Year\"))), __jsx(_Alert, {\n    message: \"Add Images\",\n    type: \"success\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 9\n    }\n  }), __jsx(\"input\", {\n    type: \"file\",\n    multiple: true,\n    onChange: handleimage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 9\n    }\n  })), __jsx(_Alert, {\n    message: \"CONTACT DETAILS\",\n    type: \"success\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 7\n    }\n  }), __jsx(_Form, {\n    labelCol: {\n      span: 4\n    },\n    wrapperCol: {\n      span: 14\n    },\n    layout: \"horizontal\",\n    style: {\n      marginTop: \"20px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 7\n    }\n  }), __jsx(_Form, {\n    labelCol: {\n      span: 4\n    },\n    wrapperCol: {\n      span: 14\n    },\n    layout: \"horizontal\",\n    style: {\n      marginTop: \"20px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 7\n    }\n  }, __jsx(_Form.Item, {\n    label: \"Phone \",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 9\n    }\n  }, __jsx(_Input, {\n    value: phone,\n    onChange: function onChange(e) {\n      return setPhone(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 11\n    }\n  })), __jsx(_Form.Item, {\n    label: \"Email\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 9\n    }\n  }, __jsx(_Input, {\n    value: email,\n    onChange: function onChange(e) {\n      return setEmail(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 11\n    }\n  })), __jsx(\"center\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 9\n    }\n  }, __jsx(_Button, {\n    type: \"primary\",\n    size: \"large\",\n    onClick: submitHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 11\n    }\n  }, \"Submit Property\"))));\n};\n\n_s(Addlisting, \"GVGa26iC91oZFJs4+aydohpTUGc=\");\n\n_c = Addlisting;\nexport default Addlisting;\n\nvar _c;\n\n$RefreshReg$(_c, \"Addlisting\");","map":{"version":3,"sources":["C:/wamp64/www/Reactapps/my-app/Apnaghar-frontend/TripFinder/packages/hotel-next/container/AddListing/AddListing.js"],"names":["React","useState","useEffect","padding","axios","getPropType","getPropSubType","getCities","getLocations","getCurrency","getArea","Addlisting","loading","setloading","imageUrl","setimageUrl","purpose","setpurpose","city","setCity","location","setLocation","title","setTitle","details","setDetails","price","setPrice","pricecurrency","setCurrency","localArea","setLocalArea","areaUnit","setareaUnit","bedrooms","setBedrooms","bathrooms","setBathrooms","expireAfter","setExpireAfter","phone","setPhone","email","setEmail","files","setFiles","proptypedata","setproptypedata","citieslist","setciteslist","locationslist","setlocationslist","currencylist","setcurrencylist","proptypevalue","setproptypevalue","propsubtypedata","setpropsubtypedata","propsubtypedataall","setpropsubtypedataall","arealist","setarealist","propType","propsubType","cities","locations","currency","area","Dragger","props","name","multiple","action","onChange","info","status","file","console","log","fileList","success","error","functproptype","functcities","functcurrency","funcpropsbtype","functarea","data","functlocation","cityId","handleSetProperty","e","main_property_cat","target","value","filtered_sub_cat","filter","a","ptypeCat","handleimage","event","Array","from","submitHandler","username","password","credentials","Buffer","toString","basicAuth","newPost","postPurpose","postTitle","postDescription","postLocation","postCity","postCountry","postTel","postPrice","postPriceCurrency","postPropArea","postPropAreaUnit","postConstructionStatus","postPropDeveloper","post","headers","Authorization","Cookie","then","res","TextArea","paddingLeft","paddingRight","span","marginTop","length","map","item","code","marginLeft","index","ptypeName","cityName","plName","currencyCode","areaUnitCode","areaUnitName"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Radio,\r\n  Select,\r\n  Cascader,\r\n  DatePicker,\r\n  InputNumber,\r\n  TreeSelect,\r\n  Switch,\r\n  Alert,\r\n  Row,\r\n  Col,\r\n  Upload,\r\n  Icon,\r\n  message,\r\n  Card,\r\n} from \"antd\";\r\nimport { padding } from \"styled-system\";\r\nimport axios from \"axios\";\r\nimport {\r\n  getPropType,\r\n  getPropSubType,\r\n  getCities,\r\n  getLocations,\r\n  getCurrency,\r\n  getArea,\r\n} from \"../../settings/service\";\r\n\r\nconst Addlisting = () => {\r\n  const [loading, setloading] = useState(false);\r\n  const [imageUrl, setimageUrl] = useState(\"\");\r\n  const [purpose, setpurpose] = useState(\"\");\r\n  const [city, setCity] = useState(\"\");\r\n  const [location, setLocation] = useState(\"\");\r\n  const [title, setTitle] = useState(\"\");\r\n  const [details, setDetails] = useState(\"\");\r\n  const [price, setPrice] = useState(\"\");\r\n  const [pricecurrency, setCurrency] = useState(\"\");\r\n  const [localArea, setLocalArea] = useState(\"\");\r\n  const [areaUnit, setareaUnit] = useState(\"\");\r\n  const [bedrooms, setBedrooms] = useState(\"\");\r\n  const [bathrooms, setBathrooms] = useState(\"\");\r\n  const [expireAfter, setExpireAfter] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [files, setFiles] = useState([]);\r\n\r\n  // API RESULTS\r\n  const [proptypedata, setproptypedata] = useState([]);\r\n  const [citieslist, setciteslist] = useState([]);\r\n  const [locationslist, setlocationslist] = useState([]);\r\n  const [currencylist, setcurrencylist] = useState([]);\r\n  const [proptypevalue, setproptypevalue] = useState([]);\r\n  const [propsubtypedata, setpropsubtypedata] = useState([]);\r\n  const [propsubtypedataall, setpropsubtypedataall] = useState([]);\r\n  const [arealist, setarealist] = useState([]);\r\n\r\n  let propType = \"\";\r\n  let propsubType = \"\";\r\n  let cities = \"\";\r\n  let locations = \"\";\r\n  let currency = \"\";\r\n  let area = \"\";\r\n  const { Dragger } = Upload;\r\n\r\n  const props = {\r\n    name: \"file\",\r\n    multiple: true,\r\n    action: \"https://www.mocky.io/v2/5cc8019d300000980a055e76\",\r\n    onChange(info) {\r\n      const { status } = info.file;\r\n      if (status !== \"uploading\") {\r\n        console.log(info.file, info.fileList);\r\n      }\r\n      if (status === \"done\") {\r\n        message.success(`${info.file.name} file uploaded successfully.`);\r\n      } else if (status === \"error\") {\r\n        message.error(`${info.file.name} file upload failed.`);\r\n      }\r\n    },\r\n  };\r\n  useEffect(() => {\r\n    functproptype();\r\n    functcities();\r\n    functcurrency();\r\n    funcpropsbtype();\r\n    functarea();\r\n  }, []);\r\n\r\n  async function functproptype() {\r\n    propType = await getPropType();\r\n    setproptypedata(propType.data);\r\n  }\r\n  async function functcities() {\r\n    cities = await getCities();\r\n    setciteslist(cities.data);\r\n  }\r\n  async function functlocation(cityId) {\r\n    locations = await getLocations(cityId);\r\n    setlocationslist(locations.data);\r\n  }\r\n  async function functcurrency() {\r\n    currency = await getCurrency();\r\n    setcurrencylist(currency.data);\r\n  }\r\n\r\n  async function funcpropsbtype() {\r\n    propsubType = await getPropSubType();\r\n    setpropsubtypedataall(propsubType.data);\r\n  }\r\n\r\n  async function functarea() {\r\n    area = await getArea();\r\n    setarealist(area.data);\r\n  }\r\n\r\n  const handleSetProperty = (e) => {\r\n    const main_property_cat = e.target.value;\r\n    setproptypevalue(e.target.value);\r\n    let filtered_sub_cat = propsubtypedataall.filter((a) => {\r\n      return a.ptypeCat == main_property_cat;\r\n    });\r\n    setpropsubtypedata(filtered_sub_cat);\r\n  };\r\n\r\n  console.log(proptypedata, \"propslist\");\r\n  console.log(citieslist, \"citieslist\");\r\n  console.log(locationslist, \"locationslist\");\r\n  console.log(currencylist, \"currencylist\");\r\n  console.log(arealist, \"arealist\");\r\n  console.log(files, \"files\");\r\n\r\n  const handleimage = (event) => {\r\n    console.log(\"images\", event.target.files);\r\n    setFiles(Array.from(event.target.files));\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    let username = \"apna\";\r\n    let password = \"apnaghar1234\";\r\n    let credentials = Buffer.from(username + \":\" + password).toString(\"base64\");\r\n    let basicAuth = \"Basic \" + credentials;\r\n    const data = {\r\n      newPost: {\r\n        postPurpose: \"B\",\r\n        propType: \"House\",\r\n        postTitle: \"Brand New Double Unit House Is Available For Sale\",\r\n        postDescription:\r\n          \"Newly Constructed House Outclass Latest Design House Available For Sale In Dha Phase 1Sector D, Islamabad.\",\r\n        postLocation: \"F-8\",\r\n        postCity: 1,\r\n        postCountry: 1,\r\n        postTel: \"03135189421\",\r\n        postPrice: 20000,\r\n        postPriceCurrency: 1,\r\n        postPropArea: 30000,\r\n        postPropAreaUnit: \"SQF\",\r\n        postConstructionStatus: \"1\",\r\n        postPropDeveloper: \"demoData\",\r\n      },\r\n      files: { files },\r\n    };\r\n    axios\r\n      .post(\r\n        `http://ec2-13-229-109-204.ap-southeast-1.compute.amazonaws.com:8080/apna/v1/posts`,\r\n        { data },\r\n        {\r\n          headers: {\r\n            Authorization: basicAuth,\r\n            Cookie: \"JSESSIONID=E2A8BF2571BA6B875803BD545D43BBD6\",\r\n          },\r\n        }\r\n      )\r\n      .then((res) => {\r\n        console.log(\"response\", res);\r\n        // console.log(res.data);\r\n      });\r\n  };\r\n\r\n  const { TextArea } = Input;\r\n  return (\r\n    <Card style={{ paddingLeft: \"10rem\", paddingRight: \"10rem\" }}>\r\n      <Alert message=\"PROPERTY TYPE AND LOCATION\" type=\"success\" />\r\n      <Form\r\n        labelCol={{\r\n          span: 4,\r\n        }}\r\n        wrapperCol={{\r\n          span: 14,\r\n        }}\r\n        layout=\"horizontal\"\r\n        style={{ marginTop: \"20px\" }}\r\n      >\r\n        <Form.Item label=\"Purpose\">\r\n          <Radio.Group>\r\n            <Radio.Button onClick={(e) => setpurpose(e.target.value)} value=\"B\">\r\n              Buy\r\n            </Radio.Button>\r\n            <Radio.Button onClick={(e) => setpurpose(e.target.value)} value=\"R\">\r\n              Rent\r\n            </Radio.Button>\r\n            <Radio.Button onClick={(e) => setpurpose(e.target.value)} value=\"P\">\r\n              Project\r\n            </Radio.Button>\r\n          </Radio.Group>\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"Property Type\" name=\"size\">\r\n          <Radio.Group>\r\n            {proptypedata && proptypedata.length !== 0\r\n              ? proptypedata.map((item) => {\r\n                  return (\r\n                    <span key={item.code}>\r\n                      <Radio.Button\r\n                        value={item.code}\r\n                        onClick={handleSetProperty}\r\n                      >\r\n                        {item.name}\r\n                      </Radio.Button>\r\n                    </span>\r\n                  );\r\n                })\r\n              : \"No Records Found\"}\r\n          </Radio.Group>\r\n          <br></br>\r\n          <Radio.Group style={{ marginTop: \"5px\", marginLeft: \"20px\" }}>\r\n            {propsubtypedata && propsubtypedata.length !== 0\r\n              ? propsubtypedata.map((item, index) => {\r\n                  return (\r\n                    <span key={item.index}>\r\n                      <Radio.Button value={item.ptypeName}>\r\n                        {item.ptypeName}\r\n                      </Radio.Button>\r\n                    </span>\r\n                  );\r\n                })\r\n              : \"No Records Found\"}\r\n          </Radio.Group>\r\n        </Form.Item>\r\n        <Form.Item label=\"Select city\">\r\n          <Select\r\n            value={city}\r\n            onChange={(e) => {\r\n              setCity(e);\r\n              functlocation(e);\r\n            }}\r\n          >\r\n            {citieslist && citieslist.length !== 0\r\n              ? citieslist.map((item, index) => {\r\n                  return (\r\n                    <Select.Option value={item.cityId} key={item.cityId}>\r\n                      {item.cityName}\r\n                    </Select.Option>\r\n                  );\r\n                })\r\n              : \"No Records Found\"}\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item label=\"Select Location\">\r\n          <Select value={location} onChange={(e) => setLocation(e)}>\r\n            {locationslist && locationslist.length !== 0\r\n              ? locationslist.map((item, index) => {\r\n                  return (\r\n                    <Select.Option value={item.plName} key={item.plName}>\r\n                      {item.plName}\r\n                    </Select.Option>\r\n                  );\r\n                })\r\n              : \"No Records Found\"}\r\n          </Select>\r\n        </Form.Item>\r\n      </Form>\r\n      <Alert message=\"PROPERTY DETAILS\" type=\"success\" />\r\n      <Form\r\n        labelCol={{\r\n          span: 4,\r\n        }}\r\n        wrapperCol={{\r\n          span: 14,\r\n        }}\r\n        layout=\"horizontal\"\r\n        style={{ marginTop: \"20px\" }}\r\n      >\r\n        <Form.Item label=\"Property Title\">\r\n          <Input value={title} onChange={(e) => setTitle(e.target.value)} />\r\n        </Form.Item>\r\n        <Form.Item label=\"Property Details\">\r\n          <TextArea\r\n            value={details}\r\n            onChange={(e) => setDetails(e.target.value)}\r\n            rows={4}\r\n          />\r\n        </Form.Item>\r\n        <Row>\r\n          <Col lg={12}>\r\n            <Form.Item label=\"All inclusive Price\">\r\n              <Input value={price} onChange={(e) => setPrice(e.target.value)} />\r\n            </Form.Item>\r\n          </Col>\r\n          <Col lg={12}>\r\n            <Form.Item label=\"Select Currency\">\r\n              <Select value={pricecurrency} onChange={(e) => setCurrency(e)}>\r\n                {currencylist && currencylist.length !== 0\r\n                  ? currencylist.map((item, index) => {\r\n                      return (\r\n                        <Select.Option\r\n                          value={item.currencyCode}\r\n                          key={item.currencyCode}\r\n                        >\r\n                          {item.currencyCode}\r\n                        </Select.Option>\r\n                      );\r\n                    })\r\n                  : \"No Records Found\"}\r\n              </Select>\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row>\r\n          <Col lg={12}>\r\n            <Form.Item label=\"Land Area\">\r\n              <Input onChange={(e) => setLocalArea(e.target.value)} />\r\n            </Form.Item>\r\n          </Col>\r\n          <Col lg={12}>\r\n            <Form.Item label=\"Area Unit\">\r\n              <Select value={areaUnit} onChange={(e) => setareaUnit(e)}>\r\n                {arealist && arealist.length !== 0\r\n                  ? arealist.map((item, index) => {\r\n                      return (\r\n                        <Select.Option\r\n                          value={item.areaUnitCode}\r\n                          key={item.areaUnitCode}\r\n                        >\r\n                          {item.areaUnitName}\r\n                        </Select.Option>\r\n                      );\r\n                    })\r\n                  : \"No Records Found\"}\r\n              </Select>\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n        <Form.Item label=\"Bedrooms\">\r\n          <Select\r\n            value={bedrooms}\r\n            onChange={(e) => setBedrooms(e.target.value)}\r\n          >\r\n            <Select.Option value=\"demo\" selected>\r\n              Islamabad\r\n            </Select.Option>\r\n            <Select.Option value=\"1\">1</Select.Option>\r\n            <Select.Option value=\"2\">2</Select.Option>\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item label=\"Bathrooms\">\r\n          <Select\r\n            value={bathrooms}\r\n            onChange={(e) => setBathrooms(e.target.value)}\r\n          >\r\n            <Select.Option value=\"demo\" selected>\r\n              Islamabad\r\n            </Select.Option>\r\n            <Select.Option value=\"1\">1</Select.Option>\r\n            <Select.Option value=\"2\">2</Select.Option>\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item label=\"Expires After\">\r\n          <Select\r\n            value={expireAfter}\r\n            onChange={(e) => setExpireAfter(e.target.value)}\r\n          >\r\n            <Select.Option value=\"6 Months\" selected>\r\n              6 Months\r\n            </Select.Option>\r\n            <Select.Option value=\"1 Year\">1 Year</Select.Option>\r\n          </Select>\r\n        </Form.Item>\r\n        <Alert message=\"Add Images\" type=\"success\"></Alert>\r\n        <input type=\"file\" multiple onChange={handleimage} />\r\n      </Form>\r\n      <Alert message=\"CONTACT DETAILS\" type=\"success\" />\r\n      <Form\r\n        labelCol={{\r\n          span: 4,\r\n        }}\r\n        wrapperCol={{\r\n          span: 14,\r\n        }}\r\n        layout=\"horizontal\"\r\n        style={{ marginTop: \"20px\" }}\r\n      ></Form>\r\n      <Form\r\n        labelCol={{\r\n          span: 4,\r\n        }}\r\n        wrapperCol={{\r\n          span: 14,\r\n        }}\r\n        layout=\"horizontal\"\r\n        style={{ marginTop: \"20px\" }}\r\n      >\r\n        <Form.Item label=\"Phone \">\r\n          <Input value={phone} onChange={(e) => setPhone(e.target.value)} />\r\n        </Form.Item>\r\n        <Form.Item label=\"Email\">\r\n          <Input value={email} onChange={(e) => setEmail(e.target.value)} />\r\n        </Form.Item>\r\n        <center>\r\n          <Button type=\"primary\" size=\"large\" onClick={submitHandler}>\r\n            Submit Property\r\n          </Button>\r\n        </center>\r\n      </Form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Addlisting;\r\n"]},"metadata":{},"sourceType":"module"}