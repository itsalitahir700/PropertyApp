{"ast":null,"code":"import _Input from \"antd/lib/input\";\n\nvar _jsxFileName = \"C:\\\\wamp64\\\\www\\\\Reactapps\\\\my-app\\\\Apnaghar-frontend\\\\TripFinder\\\\packages\\\\hotel-next\\\\components\\\\Map\\\\MapAutoComplete.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useRef } from 'react';\nimport { compose, withProps } from 'recompose';\nimport { withScriptjs } from 'react-google-maps';\nimport StandaloneSearchBox from 'react-google-maps/lib/components/places/StandaloneSearchBox';\nvar SearchInput = compose(withProps({\n  googleMapURL: process.env.REACT_APP_GOOGLE_MAP_API_KEY,\n  loadingElement: __jsx(\"div\", {\n    style: {\n      height: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 21\n    }\n  }),\n  containerElement: __jsx(\"div\", {\n    style: {\n      height: \"400px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 23\n    }\n  })\n}), withScriptjs)(_s(function (props) {\n  _s();\n\n  var getinputvalue = props.getinputvalue;\n\n  var _useState = useState({\n    searchedLocation: '',\n    searchedPlaceAPIData: []\n  }),\n      locationInput = _useState[0],\n      setLocationInput = _useState[1];\n\n  var handleOnChange = function handleOnChange(event) {\n    if (event.which === '13') {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    setLocationInput({\n      searchedLocation: event.target.value\n    });\n  };\n\n  var refs = useRef({});\n\n  var onPlacesChanged = function onPlacesChanged() {\n    var places = refs.current.getPlaces();\n    setLocationInput({\n      searchedLocation: places && places[0] && places[0].formatted_address,\n      searchedPlaceAPIData: places ? places : []\n    });\n    getinputvalue({\n      searchedLocation: places && places[0] && places[0].formatted_address,\n      searchedPlaceAPIData: places ? places : []\n    });\n  };\n\n  var handleOnPressEnter = function handleOnPressEnter(event) {\n    if (event.which === '13') {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    setLocationInput({\n      searchedLocation: event.target.value\n    });\n    getinputvalue(locationInput);\n  };\n\n  return __jsx(\"div\", {\n    className: \"map_autocomplete\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, __jsx(StandaloneSearchBox, {\n    ref: refs,\n    onPlacesChanged: onPlacesChanged,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, __jsx(_Input, {\n    type: \"text\",\n    defaultValue: \"\",\n    value: locationInput.searchedLocation || '',\n    placeholder: \"Search \\u201CThailand, Asia\\u201D\",\n    size: \"large\",\n    onChange: handleOnChange,\n    onPressEnter: handleOnPressEnter,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  })));\n}, \"4gL+YA/5xk6NskuzyQsEQmPFNxU=\"));\n\nvar MapAutoComplete = function MapAutoComplete(props) {\n  var updatevalue = props.updatevalue;\n  return __jsx(SearchInput, {\n    getinputvalue: updatevalue,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 10\n    }\n  });\n};\n\n_c = MapAutoComplete;\nexport default MapAutoComplete;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapAutoComplete\");","map":{"version":3,"sources":["C:/wamp64/www/Reactapps/my-app/Apnaghar-frontend/TripFinder/packages/hotel-next/components/Map/MapAutoComplete.js"],"names":["React","useState","useRef","compose","withProps","withScriptjs","StandaloneSearchBox","SearchInput","googleMapURL","process","env","REACT_APP_GOOGLE_MAP_API_KEY","loadingElement","height","containerElement","props","getinputvalue","searchedLocation","searchedPlaceAPIData","locationInput","setLocationInput","handleOnChange","event","which","preventDefault","stopPropagation","target","value","refs","onPlacesChanged","places","current","getPlaces","formatted_address","handleOnPressEnter","MapAutoComplete","updatevalue"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport { compose, withProps } from 'recompose';\r\nimport { withScriptjs } from 'react-google-maps';\r\nimport StandaloneSearchBox from 'react-google-maps/lib/components/places/StandaloneSearchBox';\r\nimport { Input } from 'antd';\r\n\r\nconst SearchInput = compose(\r\n  withProps({\r\n    googleMapURL: process.env.REACT_APP_GOOGLE_MAP_API_KEY,\r\n    loadingElement: <div style={{ height: '100%' }} />,\r\n    containerElement: <div style={{ height: `400px` }} />,\r\n  }),\r\n  withScriptjs\r\n)((props) => {\r\n  const { getinputvalue } = props;\r\n  const [locationInput, setLocationInput] = useState({\r\n    searchedLocation: '',\r\n    searchedPlaceAPIData: [],\r\n  });\r\n  const handleOnChange = (event) => {\r\n    if (event.which === '13') {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n    setLocationInput({\r\n      searchedLocation: event.target.value,\r\n    });\r\n  };\r\n  const refs = useRef({});\r\n  const onPlacesChanged = () => {\r\n    const places = refs.current.getPlaces();\r\n    setLocationInput({\r\n      searchedLocation: places && places[0] && places[0].formatted_address,\r\n      searchedPlaceAPIData: places ? places : [],\r\n    });\r\n    getinputvalue({\r\n      searchedLocation: places && places[0] && places[0].formatted_address,\r\n      searchedPlaceAPIData: places ? places : [],\r\n    });\r\n  };\r\n\r\n  const handleOnPressEnter = (event) => {\r\n    if (event.which === '13') {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n    setLocationInput({ searchedLocation: event.target.value });\r\n    getinputvalue(locationInput);\r\n  };\r\n\r\n  return (\r\n    <div className=\"map_autocomplete\">\r\n      <StandaloneSearchBox ref={refs} onPlacesChanged={onPlacesChanged}>\r\n        <Input\r\n          type=\"text\"\r\n          defaultValue=\"\"\r\n          value={locationInput.searchedLocation || ''}\r\n          placeholder=\"Search “Thailand, Asia”\"\r\n          size=\"large\"\r\n          onChange={handleOnChange}\r\n          onPressEnter={handleOnPressEnter}\r\n        />\r\n      </StandaloneSearchBox>\r\n    </div>\r\n  );\r\n});\r\n\r\nconst MapAutoComplete = (props) => {\r\n  const { updatevalue } = props;\r\n  return <SearchInput getinputvalue={updatevalue} />;\r\n};\r\n\r\nexport default MapAutoComplete;\r\n"]},"metadata":{},"sourceType":"module"}