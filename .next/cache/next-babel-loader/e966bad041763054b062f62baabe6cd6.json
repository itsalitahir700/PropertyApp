{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\Reactapps\\\\my-app\\\\Apnaghar-frontend\\\\TripFinder\\\\packages\\\\hotel-next\\\\components\\\\UI\\\\Favorite\\\\Favorite.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport useToggle from './useToggle';\nimport FavoriteWrapper from './Favorite.style';\n\nconst Favorite = ({\n  className,\n  content,\n  onClick\n}) => {\n  // use toggle hooks\n  const [toggleValue, toggleHandler] = useToggle(false); // Add all classs to an array\n\n  const addAllClass = ['favorite']; // className prop checking\n\n  if (className) {\n    addAllClass.push(className);\n  }\n\n  const handelClick = event => {\n    toggleHandler();\n    onClick(!toggleValue);\n  };\n\n  return __jsx(FavoriteWrapper, {\n    onClick: handelClick,\n    className: `${addAllClass.join(' ')} ${toggleValue ? 'active' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, __jsx(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 18.64 18.232\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, __jsx(\"path\", {\n    d: \"M60.16,56h-.04a4.551,4.551,0,0,0-3.8,2.08A4.551,4.551,0,0,0,52.52,56h-.04A4.522,4.522,0,0,0,48,60.52a9.737,9.737,0,0,0,1.912,5.308A33.506,33.506,0,0,0,56.32,72a33.506,33.506,0,0,0,6.408-6.172A9.737,9.737,0,0,0,64.64,60.52,4.522,4.522,0,0,0,60.16,56Z\",\n    transform: \"translate(-47 -55)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  })), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, content));\n};\n\nFavorite.propTypes = {\n  /** ClassName of the Favorite */\n  className: PropTypes.string,\n\n  /** content of the Favorite */\n  content: PropTypes.string,\n\n  /**\r\n   * Callback fired when the value is changed.\r\n   *\r\n   * @param {object} event The event source of the callback.\r\n   * You can pull out the new value by accessing `event.target.value`.\r\n   */\n  onClick: PropTypes.func\n};\nFavorite.defaultProps = {\n  onClick: () => {}\n};\nexport default Favorite;","map":{"version":3,"sources":["C:/wamp64/www/Reactapps/my-app/Apnaghar-frontend/TripFinder/packages/hotel-next/components/UI/Favorite/Favorite.js"],"names":["React","PropTypes","useToggle","FavoriteWrapper","Favorite","className","content","onClick","toggleValue","toggleHandler","addAllClass","push","handelClick","event","join","propTypes","string","func","defaultProps"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,eAAP,MAA4B,kBAA5B;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,OAAb;AAAsBC,EAAAA;AAAtB,CAAD,KAAqC;AACpD;AACA,QAAM,CAACC,WAAD,EAAcC,aAAd,IAA+BP,SAAS,CAAC,KAAD,CAA9C,CAFoD,CAIpD;;AACA,QAAMQ,WAAW,GAAG,CAAC,UAAD,CAApB,CALoD,CAOpD;;AACA,MAAIL,SAAJ,EAAe;AACbK,IAAAA,WAAW,CAACC,IAAZ,CAAiBN,SAAjB;AACD;;AAED,QAAMO,WAAW,GAAGC,KAAK,IAAI;AAC3BJ,IAAAA,aAAa;AACbF,IAAAA,OAAO,CAAC,CAACC,WAAF,CAAP;AACD,GAHD;;AAKA,SACE,MAAC,eAAD;AACE,IAAA,OAAO,EAAEI,WADX;AAEE,IAAA,SAAS,EAAG,GAAEF,WAAW,CAACI,IAAZ,CAAiB,GAAjB,CAAsB,IAAGN,WAAW,GAAG,QAAH,GAAc,EAAG,EAFrE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE;AAAK,IAAA,KAAK,EAAC,4BAAX;AAAwC,IAAA,OAAO,EAAC,kBAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,CAAC,EAAC,2PADJ;AAEE,IAAA,SAAS,EAAC,oBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOF,OAAP,CAVF,CADF;AAcD,CA/BD;;AAiCAF,QAAQ,CAACW,SAAT,GAAqB;AACnB;AACAV,EAAAA,SAAS,EAAEJ,SAAS,CAACe,MAFF;;AAGnB;AACAV,EAAAA,OAAO,EAAEL,SAAS,CAACe,MAJA;;AAKnB;AACF;AACA;AACA;AACA;AACA;AACET,EAAAA,OAAO,EAAEN,SAAS,CAACgB;AAXA,CAArB;AAcAb,QAAQ,CAACc,YAAT,GAAwB;AACtBX,EAAAA,OAAO,EAAE,MAAM,CAAE;AADK,CAAxB;AAIA,eAAeH,QAAf","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport useToggle from './useToggle';\r\nimport FavoriteWrapper from './Favorite.style';\r\n\r\nconst Favorite = ({ className, content, onClick }) => {\r\n  // use toggle hooks\r\n  const [toggleValue, toggleHandler] = useToggle(false);\r\n\r\n  // Add all classs to an array\r\n  const addAllClass = ['favorite'];\r\n\r\n  // className prop checking\r\n  if (className) {\r\n    addAllClass.push(className);\r\n  }\r\n\r\n  const handelClick = event => {\r\n    toggleHandler();\r\n    onClick(!toggleValue);\r\n  };\r\n\r\n  return (\r\n    <FavoriteWrapper\r\n      onClick={handelClick}\r\n      className={`${addAllClass.join(' ')} ${toggleValue ? 'active' : ''}`}\r\n    >\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 18.64 18.232\">\r\n        <path\r\n          d=\"M60.16,56h-.04a4.551,4.551,0,0,0-3.8,2.08A4.551,4.551,0,0,0,52.52,56h-.04A4.522,4.522,0,0,0,48,60.52a9.737,9.737,0,0,0,1.912,5.308A33.506,33.506,0,0,0,56.32,72a33.506,33.506,0,0,0,6.408-6.172A9.737,9.737,0,0,0,64.64,60.52,4.522,4.522,0,0,0,60.16,56Z\"\r\n          transform=\"translate(-47 -55)\"\r\n        />\r\n      </svg>\r\n      <span>{content}</span>\r\n    </FavoriteWrapper>\r\n  );\r\n};\r\n\r\nFavorite.propTypes = {\r\n  /** ClassName of the Favorite */\r\n  className: PropTypes.string,\r\n  /** content of the Favorite */\r\n  content: PropTypes.string,\r\n  /**\r\n   * Callback fired when the value is changed.\r\n   *\r\n   * @param {object} event The event source of the callback.\r\n   * You can pull out the new value by accessing `event.target.value`.\r\n   */\r\n  onClick: PropTypes.func,\r\n};\r\n\r\nFavorite.defaultProps = {\r\n  onClick: () => {},\r\n};\r\n\r\nexport default Favorite;\r\n"]},"metadata":{},"sourceType":"module"}