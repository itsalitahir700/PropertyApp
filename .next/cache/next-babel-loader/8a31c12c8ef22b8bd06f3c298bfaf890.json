{"ast":null,"code":"import _Input from \"antd/lib/input\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\wamp64\\\\www\\\\Reactapps\\\\my-app\\\\Apnaghar-frontend\\\\TripFinder\\\\packages\\\\hotel-next\\\\components\\\\Map\\\\MapSearchBox.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useRef } from 'react';\nimport _ from 'lodash';\nimport { Marker } from 'react-google-maps';\nimport MapWrapper from './MapWrapper';\nimport makerImage from './hotelMapMarker.png';\n\nvar _require = require('react-google-maps/lib/components/places/SearchBox'),\n    SearchBox = _require.SearchBox;\n\nvar MapWithSearchBox = function MapWithSearchBox(props) {\n  _s();\n\n  var _useState = useState([]),\n      dragNDropData = _useState[0],\n      setDragNDropData = _useState[1];\n\n  var updatevalue = props.updatevalue,\n      name = props.name;\n\n  var _useState2 = useState({\n    searchedLocation: ''\n  }),\n      locationInput = _useState2[0],\n      setLocationInput = _useState2[1];\n\n  var _useState3 = useState({\n    center: {\n      lat: 40.7128,\n      lng: -74.006\n    },\n    markers: [{\n      position: {\n        lat: 40.7128,\n        lng: -74.006\n      }\n    }],\n    places: []\n  }),\n      locationDetails = _useState3[0],\n      setLocationDetails = _useState3[1]; // const googleMapRef = useRef(null);\n\n\n  var SearchBoxRef = useRef(null);\n\n  var onPlacesChanged = function onPlacesChanged() {\n    var places = SearchBoxRef.current.getPlaces();\n    var bounds = new window.google.maps.LatLngBounds();\n    places.forEach(function (place) {\n      if (place.geometry.viewport) {\n        bounds.union(place.geometry.viewport);\n      } else {\n        bounds.extend(place.geometry.location);\n      }\n    });\n    var nextMarkers = places.map(function (place) {\n      return {\n        position: place.geometry.location\n      };\n    });\n\n    var nextCenter = _.get(nextMarkers, '0.position', locationDetails.center);\n\n    setLocationDetails({\n      places,\n      center: nextCenter,\n      markers: nextMarkers\n    });\n    setLocationInput({\n      searchedLocation: places && places[0] && places[0].formatted_address\n    });\n    updatevalue(places);\n  };\n\n  var handleOnChange = function handleOnChange(event) {\n    event.stopPropagation();\n\n    if (event.which === '13') {\n      event.preventDefault();\n    }\n\n    setLocationInput({\n      searchedLocation: event.target.value\n    });\n  };\n\n  var handleOnPressEnter = function handleOnPressEnter(event) {\n    event.stopPropagation();\n\n    if (event.which === '13') {\n      event.preventDefault();\n    }\n\n    setLocationInput({\n      searchedLocation: event.target.value\n    });\n  };\n\n  var onDragEndFunc = function onDragEndFunc(marker) {\n    var tempLocArray = [];\n    var geocoder = new window.google.maps.Geocoder();\n    var latlng = {\n      lat: Number(marker.latLng.lat().toFixed(4)),\n      lng: Number(marker.latLng.lng().toFixed(4))\n    };\n    setLocationDetails(_objectSpread(_objectSpread({}, locationDetails), {}, {\n      center: latlng\n    }));\n    geocoder.geocode({\n      latLng: latlng\n    }, function (results, status) {\n      console.log(results, 'results');\n\n      if (results[0] && results[0].formatted_address) {\n        setLocationInput({\n          searchedLocation: results[0] && results[0].formatted_address\n        });\n        var location = {\n          place_id: results[0].place_id,\n          formatted_address: results[0].formatted_address,\n          address_components: results[0].address_components,\n          geometry: results[0].geometry\n        };\n        tempLocArray.push(location);\n      }\n\n      setDragNDropData(tempLocArray);\n    });\n    updatevalue(dragNDropData);\n  };\n\n  return __jsx(MapWrapper, {\n    containerElement: __jsx(\"div\", {\n      style: {\n        height: '400px'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 25\n      }\n    }),\n    mapElement: __jsx(\"div\", {\n      style: {\n        height: '100%'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 19\n      }\n    }),\n    defaultZoom: 15,\n    center: locationDetails.center,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }\n  }, __jsx(SearchBox, {\n    ref: SearchBoxRef,\n    controlPosition: window.google.maps.ControlPosition.TOP_LEFT,\n    onPlacesChanged: onPlacesChanged,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }, __jsx(_Input, {\n    type: \"text\",\n    name: name,\n    placeholder: \"Enter your hotel location\",\n    style: {\n      boxSizing: \"border-box\",\n      border: \"1px solid transparent\",\n      width: \"260px\",\n      height: \"40px\",\n      marginTop: \"10px\",\n      padding: \"0 12px\",\n      borderRadius: \"2px\",\n      boxShadow: \"0 3px 6px rgba(0, 0, 0, 0.16)\",\n      fontSize: \"15px\",\n      outline: \"none\",\n      textOverflow: \"ellipses\"\n    },\n    defaultValue: \"\",\n    value: locationInput ? locationInput.searchedLocation : '',\n    onChange: handleOnChange,\n    onPressEnter: handleOnPressEnter,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  })), locationDetails.markers.map(function (marker, index) {\n    return __jsx(Marker, {\n      icon: makerImage,\n      key: index,\n      position: marker.position,\n      onDragEnd: function onDragEnd(marker) {\n        return onDragEndFunc(marker);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }\n    });\n  }));\n};\n\n_s(MapWithSearchBox, \"f3G6BwfPrppe33q/RQN9tig505k=\");\n\n_c = MapWithSearchBox;\nexport default MapWithSearchBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapWithSearchBox\");","map":{"version":3,"sources":["C:/wamp64/www/Reactapps/my-app/Apnaghar-frontend/TripFinder/packages/hotel-next/components/Map/MapSearchBox.js"],"names":["React","useState","useRef","_","Marker","MapWrapper","makerImage","require","SearchBox","MapWithSearchBox","props","dragNDropData","setDragNDropData","updatevalue","name","searchedLocation","locationInput","setLocationInput","center","lat","lng","markers","position","places","locationDetails","setLocationDetails","SearchBoxRef","onPlacesChanged","current","getPlaces","bounds","window","google","maps","LatLngBounds","forEach","place","geometry","viewport","union","extend","location","nextMarkers","map","nextCenter","get","formatted_address","handleOnChange","event","stopPropagation","which","preventDefault","target","value","handleOnPressEnter","onDragEndFunc","marker","tempLocArray","geocoder","Geocoder","latlng","Number","latLng","toFixed","geocode","results","status","console","log","place_id","address_components","push","height","ControlPosition","TOP_LEFT","boxSizing","border","width","marginTop","padding","borderRadius","boxShadow","fontSize","outline","textOverflow","index"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport _ from 'lodash';\r\nimport { Marker } from 'react-google-maps';\r\nimport MapWrapper from './MapWrapper';\r\nimport { Input } from 'antd';\r\nimport makerImage from './hotelMapMarker.png';\r\nconst {\r\n  SearchBox,\r\n} = require('react-google-maps/lib/components/places/SearchBox');\r\n\r\nconst MapWithSearchBox = (props) => {\r\n  const [dragNDropData, setDragNDropData] = useState([]);\r\n  const { updatevalue, name } = props;\r\n  const [locationInput, setLocationInput] = useState({ searchedLocation: '' });\r\n  const [locationDetails, setLocationDetails] = useState({\r\n    center: {\r\n      lat: 40.7128,\r\n      lng: -74.006,\r\n    },\r\n    markers: [\r\n      {\r\n        position: {\r\n          lat: 40.7128,\r\n          lng: -74.006,\r\n        },\r\n      },\r\n    ],\r\n    places: [],\r\n  });\r\n  // const googleMapRef = useRef(null);\r\n  const SearchBoxRef = useRef(null);\r\n  const onPlacesChanged = () => {\r\n    const places = SearchBoxRef.current.getPlaces();\r\n    const bounds = new window.google.maps.LatLngBounds();\r\n    places.forEach((place) => {\r\n      if (place.geometry.viewport) {\r\n        bounds.union(place.geometry.viewport);\r\n      } else {\r\n        bounds.extend(place.geometry.location);\r\n      }\r\n    });\r\n    const nextMarkers = places.map((place) => ({\r\n      position: place.geometry.location,\r\n    }));\r\n    const nextCenter = _.get(nextMarkers, '0.position', locationDetails.center);\r\n\r\n    setLocationDetails({\r\n      places,\r\n      center: nextCenter,\r\n      markers: nextMarkers,\r\n    });\r\n    setLocationInput({\r\n      searchedLocation: places && places[0] && places[0].formatted_address,\r\n    });\r\n    updatevalue(places);\r\n  };\r\n\r\n  const handleOnChange = (event) => {\r\n    event.stopPropagation();\r\n    if (event.which === '13') {\r\n      event.preventDefault();\r\n    }\r\n    setLocationInput({ searchedLocation: event.target.value });\r\n  };\r\n\r\n  const handleOnPressEnter = (event) => {\r\n    event.stopPropagation();\r\n    if (event.which === '13') {\r\n      event.preventDefault();\r\n    }\r\n    setLocationInput({ searchedLocation: event.target.value });\r\n  };\r\n\r\n  const onDragEndFunc = (marker) => {\r\n    let tempLocArray = [];\r\n    var geocoder = new window.google.maps.Geocoder();\r\n    const latlng = {\r\n      lat: Number(marker.latLng.lat().toFixed(4)),\r\n      lng: Number(marker.latLng.lng().toFixed(4)),\r\n    };\r\n\r\n    setLocationDetails({\r\n      ...locationDetails,\r\n      center: latlng,\r\n    });\r\n\r\n    geocoder.geocode({ latLng: latlng }, function (results, status) {\r\n      console.log(results, 'results');\r\n      if (results[0] && results[0].formatted_address) {\r\n        setLocationInput({\r\n          searchedLocation: results[0] && results[0].formatted_address,\r\n        });\r\n        const location = {\r\n          place_id: results[0].place_id,\r\n          formatted_address: results[0].formatted_address,\r\n          address_components: results[0].address_components,\r\n          geometry: results[0].geometry,\r\n        };\r\n        tempLocArray.push(location);\r\n      }\r\n      setDragNDropData(tempLocArray);\r\n    });\r\n    updatevalue(dragNDropData);\r\n  };\r\n\r\n  return (\r\n    <MapWrapper\r\n      containerElement={<div style={{ height: '400px' }} />}\r\n      mapElement={<div style={{ height: '100%' }} />}\r\n      defaultZoom={15}\r\n      center={locationDetails.center}\r\n    >\r\n      <SearchBox\r\n        ref={SearchBoxRef}\r\n        controlPosition={window.google.maps.ControlPosition.TOP_LEFT}\r\n        onPlacesChanged={onPlacesChanged}\r\n      >\r\n        <Input\r\n          type=\"text\"\r\n          name={name}\r\n          placeholder=\"Enter your hotel location\"\r\n          style={{\r\n            boxSizing: `border-box`,\r\n            border: `1px solid transparent`,\r\n            width: `260px`,\r\n            height: `40px`,\r\n            marginTop: `10px`,\r\n            padding: `0 12px`,\r\n            borderRadius: `2px`,\r\n            boxShadow: `0 3px 6px rgba(0, 0, 0, 0.16)`,\r\n            fontSize: `15px`,\r\n            outline: `none`,\r\n            textOverflow: `ellipses`,\r\n          }}\r\n          defaultValue=\"\"\r\n          value={locationInput ? locationInput.searchedLocation : ''}\r\n          onChange={handleOnChange}\r\n          onPressEnter={handleOnPressEnter}\r\n        />\r\n      </SearchBox>\r\n      {locationDetails.markers.map((marker, index) => {\r\n        return (\r\n          <Marker\r\n            icon={makerImage}\r\n            key={index}\r\n            position={marker.position}\r\n            onDragEnd={(marker) => onDragEndFunc(marker)}\r\n          />\r\n        );\r\n      })}\r\n    </MapWrapper>\r\n  );\r\n};\r\n\r\nexport default MapWithSearchBox;\r\n"]},"metadata":{},"sourceType":"module"}