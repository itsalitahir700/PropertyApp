{"ast":null,"code":"import _Button from \"antd/lib/button\";\nimport _Row from \"antd/lib/row\";\nimport _InputNumber from \"antd/lib/input-number\";\nimport _Col from \"antd/lib/col\";\nimport _Input from \"antd/lib/input\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\wamp64\\\\www\\\\Reactapps\\\\my-app\\\\Apnaghar-frontend\\\\TripFinder\\\\packages\\\\hotel-next\\\\container\\\\AddListing\\\\BasicInformation.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport { useStateMachine } from 'little-state-machine';\nimport { useForm, Controller } from 'react-hook-form';\nimport InputIncDec from 'components/UI/InputIncDec/InputIncDec';\nimport FormControl from 'components/UI/FormControl/FormControl';\nimport AddListingAction from './AddListingAction';\nimport { FormHeader, Title, FormContent, FormAction } from './AddListing.style';\n\nvar BasicInformation = function BasicInformation(_ref) {\n  _s();\n\n  var _errors$pricePerNight, _errors$pricePerNight2;\n\n  var setStep = _ref.setStep;\n\n  var _useStateMachine = useStateMachine(AddListingAction),\n      action = _useStateMachine.action,\n      state = _useStateMachine.state;\n\n  var _useForm = useForm(),\n      control = _useForm.control,\n      register = _useForm.register,\n      errors = _useForm.errors,\n      setValue = _useForm.setValue,\n      handleSubmit = _useForm.handleSubmit;\n\n  var _useState = useState({\n    guest: 0,\n    bed: 0\n  }),\n      quantity = _useState[0],\n      setQuantity = _useState[1];\n\n  useEffect(function () {\n    register({\n      name: 'guest'\n    }, {\n      required: true\n    });\n    register({\n      name: 'bed'\n    }, {\n      required: true\n    });\n  }, [register]);\n\n  var handleOnChange = function handleOnChange(key) {\n    return function (event) {\n      setQuantity(_objectSpread(_objectSpread({}, quantity), {}, {\n        [key]: event.target.value\n      }));\n      setValue([key], event.target.value);\n    };\n  };\n\n  var handleIncrement = function handleIncrement(key) {\n    setQuantity(_objectSpread(_objectSpread({}, quantity), {}, {\n      [key]: ++quantity[key]\n    }));\n    setValue([key], ++quantity[key]);\n  };\n\n  var handleDecrement = function handleDecrement(key) {\n    if (quantity[key] <= 0) {\n      return false;\n    }\n\n    setQuantity(_objectSpread(_objectSpread({}, quantity), {}, {\n      [key]: --quantity[key]\n    }));\n    setValue([key], --quantity[key]);\n  };\n\n  var onSubmit = function onSubmit(data) {\n    action(data);\n    setStep(2);\n  };\n\n  return __jsx(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, __jsx(FormContent, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, __jsx(FormHeader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, __jsx(Title, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, \"Step 1: Start with the basics\")), __jsx(_Row, {\n    gutter: 30,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, __jsx(_Col, {\n    sm: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, __jsx(FormControl, {\n    label: \"Hotel Name\",\n    htmlFor: \"hotelName\",\n    error: errors.hotelName && __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 42\n      }\n    }, \"This field is required!\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, __jsx(Controller, {\n    as: __jsx(_Input, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    }),\n    id: \"hotelName\",\n    name: \"hotelName\",\n    defaultValue: state.data.hotelName,\n    control: control,\n    placeholder: \"Write your hotel name here\",\n    rules: {\n      required: true\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }))), __jsx(_Col, {\n    sm: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, __jsx(FormControl, {\n    label: \"Price Per Night (USD)\",\n    htmlFor: \"pricePerNight\",\n    error: errors.pricePerNight && __jsx(React.Fragment, null, ((_errors$pricePerNight = errors.pricePerNight) === null || _errors$pricePerNight === void 0 ? void 0 : _errors$pricePerNight.type) === 'required' && __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 23\n      }\n    }, \"This field is required!\"), ((_errors$pricePerNight2 = errors.pricePerNight) === null || _errors$pricePerNight2 === void 0 ? void 0 : _errors$pricePerNight2.type) === 'pattern' && __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 23\n      }\n    }, \"Please enter only number!\")),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, __jsx(Controller, {\n    as: __jsx(_InputNumber, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }\n    }),\n    id: \"pricePerNight\",\n    name: \"pricePerNight\",\n    defaultValue: state.data.pricePerNight,\n    control: control,\n    placeholder: \"00.00\",\n    rules: {\n      required: true,\n      pattern: /^[0-9]*$/\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }\n  })))), __jsx(FormControl, {\n    label: \"Hotel Description\",\n    htmlFor: \"hotelDescription\",\n    error: errors.hotelDescription && __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 40\n      }\n    }, \"This field is required!\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, __jsx(Controller, {\n    as: __jsx(_Input.TextArea, {\n      rows: 5,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }\n    }),\n    id: \"hotelDescription\",\n    name: \"hotelDescription\",\n    defaultValue: state.data.hotelDescription,\n    control: control,\n    placeholder: \"Tell people about your hotel, room, location & amenities\",\n    rules: {\n      required: true\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  })), __jsx(FormControl, {\n    label: \"How many guests can your hotel accommodate?\",\n    error: errors.guest && __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 34\n      }\n    }, \"This field is required!\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, __jsx(InputIncDec, {\n    name: \"guest\",\n    value: quantity.guest,\n    onChange: handleOnChange('guest'),\n    increment: function increment() {\n      return handleIncrement('guest');\n    },\n    decrement: function decrement() {\n      return handleDecrement('guest');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }\n  })), __jsx(FormControl, {\n    label: \"How many beds can guests use?\",\n    error: errors.bed && __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 32\n      }\n    }, \"This field is required!\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, __jsx(InputIncDec, {\n    name: \"bed\",\n    value: quantity.bed,\n    onChange: handleOnChange('bed'),\n    increment: function increment() {\n      return handleIncrement('bed');\n    },\n    decrement: function decrement() {\n      return handleDecrement('bed');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }))), __jsx(FormAction, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"inner-wrapper\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }\n  }, __jsx(_Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 11\n    }\n  }, \"Next\"))));\n};\n\n_s(BasicInformation, \"8yk2PZNILwB1kFwSNf9IkirlfFA=\", false, function () {\n  return [useStateMachine, useForm];\n});\n\n_c = BasicInformation;\nexport default BasicInformation;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicInformation\");","map":{"version":3,"sources":["C:/wamp64/www/Reactapps/my-app/Apnaghar-frontend/TripFinder/packages/hotel-next/container/AddListing/BasicInformation.js"],"names":["React","useState","useEffect","useStateMachine","useForm","Controller","InputIncDec","FormControl","AddListingAction","FormHeader","Title","FormContent","FormAction","BasicInformation","setStep","action","state","control","register","errors","setValue","handleSubmit","guest","bed","quantity","setQuantity","name","required","handleOnChange","key","event","target","value","handleIncrement","handleDecrement","onSubmit","data","hotelName","pricePerNight","type","pattern","hotelDescription"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useStateMachine } from 'little-state-machine';\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport { Row, Col, Input, InputNumber, Button } from 'antd';\r\nimport InputIncDec from 'components/UI/InputIncDec/InputIncDec';\r\nimport FormControl from 'components/UI/FormControl/FormControl';\r\nimport AddListingAction from './AddListingAction';\r\nimport { FormHeader, Title, FormContent, FormAction } from './AddListing.style';\r\n\r\nconst BasicInformation = ({ setStep }) => {\r\n  const { action, state } = useStateMachine(AddListingAction);\r\n  const { control, register, errors, setValue, handleSubmit } = useForm();\r\n  const [quantity, setQuantity] = useState({\r\n    guest: 0,\r\n    bed: 0,\r\n  });\r\n  useEffect(() => {\r\n    register({ name: 'guest' }, { required: true });\r\n    register({ name: 'bed' }, { required: true });\r\n  }, [register]);\r\n\r\n  const handleOnChange = (key) => (event) => {\r\n    setQuantity({\r\n      ...quantity,\r\n      [key]: event.target.value,\r\n    });\r\n    setValue([key], event.target.value);\r\n  };\r\n\r\n  const handleIncrement = (key) => {\r\n    setQuantity({\r\n      ...quantity,\r\n      [key]: ++quantity[key],\r\n    });\r\n    setValue([key], ++quantity[key]);\r\n  };\r\n\r\n  const handleDecrement = (key) => {\r\n    if (quantity[key] <= 0) {\r\n      return false;\r\n    }\r\n    setQuantity({\r\n      ...quantity,\r\n      [key]: --quantity[key],\r\n    });\r\n    setValue([key], --quantity[key]);\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n    action(data);\r\n    setStep(2);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      <FormContent>\r\n        <FormHeader>\r\n          <Title>Step 1: Start with the basics</Title>\r\n        </FormHeader>\r\n        <Row gutter={30}>\r\n          <Col sm={12}>\r\n            <FormControl\r\n              label=\"Hotel Name\"\r\n              htmlFor=\"hotelName\"\r\n              error={errors.hotelName && <span>This field is required!</span>}\r\n            >\r\n              <Controller\r\n                as={<Input />}\r\n                id=\"hotelName\"\r\n                name=\"hotelName\"\r\n                defaultValue={state.data.hotelName}\r\n                control={control}\r\n                placeholder=\"Write your hotel name here\"\r\n                rules={{\r\n                  required: true,\r\n                }}\r\n              />\r\n            </FormControl>\r\n          </Col>\r\n          <Col sm={12}>\r\n            <FormControl\r\n              label=\"Price Per Night (USD)\"\r\n              htmlFor=\"pricePerNight\"\r\n              error={\r\n                errors.pricePerNight && (\r\n                  <>\r\n                    {errors.pricePerNight?.type === 'required' && (\r\n                      <span>This field is required!</span>\r\n                    )}\r\n                    {errors.pricePerNight?.type === 'pattern' && (\r\n                      <span>Please enter only number!</span>\r\n                    )}\r\n                  </>\r\n                )\r\n              }\r\n            >\r\n              <Controller\r\n                as={<InputNumber />}\r\n                id=\"pricePerNight\"\r\n                name=\"pricePerNight\"\r\n                defaultValue={state.data.pricePerNight}\r\n                control={control}\r\n                placeholder=\"00.00\"\r\n                rules={{\r\n                  required: true,\r\n                  pattern: /^[0-9]*$/,\r\n                }}\r\n              />\r\n            </FormControl>\r\n          </Col>\r\n        </Row>\r\n        <FormControl\r\n          label=\"Hotel Description\"\r\n          htmlFor=\"hotelDescription\"\r\n          error={\r\n            errors.hotelDescription && <span>This field is required!</span>\r\n          }\r\n        >\r\n          <Controller\r\n            as={<Input.TextArea rows={5} />}\r\n            id=\"hotelDescription\"\r\n            name=\"hotelDescription\"\r\n            defaultValue={state.data.hotelDescription}\r\n            control={control}\r\n            placeholder=\"Tell people about your hotel, room, location & amenities\"\r\n            rules={{\r\n              required: true,\r\n            }}\r\n          />\r\n        </FormControl>\r\n        <FormControl\r\n          label=\"How many guests can your hotel accommodate?\"\r\n          error={errors.guest && <span>This field is required!</span>}\r\n        >\r\n          <InputIncDec\r\n            name=\"guest\"\r\n            value={quantity.guest}\r\n            onChange={handleOnChange('guest')}\r\n            increment={() => handleIncrement('guest')}\r\n            decrement={() => handleDecrement('guest')}\r\n          />\r\n        </FormControl>\r\n        <FormControl\r\n          label=\"How many beds can guests use?\"\r\n          error={errors.bed && <span>This field is required!</span>}\r\n        >\r\n          <InputIncDec\r\n            name=\"bed\"\r\n            value={quantity.bed}\r\n            onChange={handleOnChange('bed')}\r\n            increment={() => handleIncrement('bed')}\r\n            decrement={() => handleDecrement('bed')}\r\n          />\r\n        </FormControl>\r\n      </FormContent>\r\n      <FormAction>\r\n        <div className=\"inner-wrapper\">\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Next\r\n          </Button>\r\n        </div>\r\n      </FormAction>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default BasicInformation;\r\n"]},"metadata":{},"sourceType":"module"}