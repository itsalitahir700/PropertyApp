{"ast":null,"code":"import _Button from \"antd/lib/button\";\nimport _Row from \"antd/lib/row\";\nimport _Col from \"antd/lib/col\";\nimport _Input from \"antd/lib/input\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\wamp64\\\\www\\\\Reactapps\\\\my-app\\\\Apnaghar-frontend\\\\TripFinder\\\\packages\\\\hotel-next\\\\container\\\\AddListing\\\\HotelLocation.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { IoIosArrowBack } from 'react-icons/io';\nimport { useStateMachine } from 'little-state-machine';\nimport { useForm, Controller } from 'react-hook-form';\nimport FormControl from 'components/UI/FormControl/FormControl';\nimport MapWithSearchBox from 'components/Map/MapSearchBox';\nimport { mapDataHelper } from 'components/Map/mapDataHelper';\nimport AddListingAction from './AddListingAction';\nimport { FormHeader, Title, FormContent, FormAction } from './AddListing.style';\n\nvar HotelLocation = function HotelLocation(_ref) {\n  _s();\n\n  var _errors$contactNumber, _errors$contactNumber2;\n\n  var setStep = _ref.setStep;\n  var tempLocationData = [];\n\n  var _useState = useState([]),\n      location = _useState[0],\n      setLocation = _useState[1];\n\n  var _useForm = useForm({\n    mode: 'onChange'\n  }),\n      control = _useForm.control,\n      register = _useForm.register,\n      errors = _useForm.errors,\n      setValue = _useForm.setValue,\n      handleSubmit = _useForm.handleSubmit;\n\n  var _useStateMachine = useStateMachine(AddListingAction),\n      action = _useStateMachine.action,\n      state = _useStateMachine.state;\n\n  useEffect(function () {\n    register({\n      name: 'locationData'\n    }, {\n      required: true\n    });\n  }, [register]);\n\n  var onSubmit = function onSubmit(data) {\n    action(data);\n    setStep(4);\n  };\n\n  return __jsx(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, __jsx(FormContent, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, __jsx(FormHeader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, __jsx(Title, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, \"Step 3: Hotel Location\")), __jsx(_Row, {\n    gutter: 30,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, __jsx(_Col, {\n    sm: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, __jsx(FormControl, {\n    label: \"Contact number\",\n    htmlFor: \"contactNumber\",\n    error: errors.contactNumber && __jsx(React.Fragment, null, ((_errors$contactNumber = errors.contactNumber) === null || _errors$contactNumber === void 0 ? void 0 : _errors$contactNumber.type) === 'required' && __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 23\n      }\n    }, \"This field is required!\"), ((_errors$contactNumber2 = errors.contactNumber) === null || _errors$contactNumber2 === void 0 ? void 0 : _errors$contactNumber2.type) === 'pattern' && __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 23\n      }\n    }, \"Please enter your valid number!\")),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, __jsx(Controller, {\n    as: __jsx(_Input, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }\n    }),\n    id: \"contactNumber\",\n    name: \"contactNumber\",\n    defaultValue: state.data.contactNumber,\n    control: control,\n    placeholder: \"Phone\",\n    rules: {\n      required: true,\n      pattern: /^[0-9]*$/\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }\n  })))), __jsx(FormControl, {\n    label: \"Details description\",\n    htmlFor: \"locationDescription\",\n    error: errors.locationDescription && __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 43\n      }\n    }, \"This field is required!\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, __jsx(Controller, {\n    as: __jsx(_Input.TextArea, {\n      rows: 5,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }),\n    id: \"locationDescription\",\n    name: \"locationDescription\",\n    defaultValue: state.data.locationDescription,\n    control: control,\n    placeholder: \"Write your hotel direction in details , it may help traveler to find your hotel easily\",\n    rules: {\n      required: true\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  })), __jsx(FormControl, {\n    error: errors.locationData && __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 41\n      }\n    }, \"This field is required!\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, __jsx(MapWithSearchBox, {\n    name: \"locationData\",\n    updatevalue: function updatevalue(value) {\n      tempLocationData = mapDataHelper(value);\n      setValue('locationData', tempLocationData);\n      setLocation(value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }))), __jsx(FormAction, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"inner-wrapper\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, __jsx(_Button, {\n    className: \"back-btn\",\n    htmlType: \"button\",\n    onClick: function onClick() {\n      return setStep(2);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, __jsx(IoIosArrowBack, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }), \" Back\"), __jsx(_Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, \"Next\"))));\n};\n\n_s(HotelLocation, \"acZRmb2/xCk/3Dh5aCLa1nAqzfY=\", false, function () {\n  return [useForm, useStateMachine];\n});\n\n_c = HotelLocation;\nexport default HotelLocation;\n\nvar _c;\n\n$RefreshReg$(_c, \"HotelLocation\");","map":{"version":3,"sources":["C:/wamp64/www/Reactapps/my-app/Apnaghar-frontend/TripFinder/packages/hotel-next/container/AddListing/HotelLocation.js"],"names":["React","useState","useEffect","IoIosArrowBack","useStateMachine","useForm","Controller","FormControl","MapWithSearchBox","mapDataHelper","AddListingAction","FormHeader","Title","FormContent","FormAction","HotelLocation","setStep","tempLocationData","location","setLocation","mode","control","register","errors","setValue","handleSubmit","action","state","name","required","onSubmit","data","contactNumber","type","pattern","locationDescription","locationData","value"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,cAAT,QAA+B,gBAA/B;AACA,SAASC,eAAT,QAAgC,sBAAhC;AACA,SAASC,OAAT,EAAkBC,UAAlB,QAAoC,iBAApC;AAEA,OAAOC,WAAP,MAAwB,uCAAxB;AACA,OAAOC,gBAAP,MAA6B,6BAA7B;AACA,SAASC,aAAT,QAA8B,8BAA9B;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,SAASC,UAAT,EAAqBC,KAArB,EAA4BC,WAA5B,EAAyCC,UAAzC,QAA2D,oBAA3D;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAAiB;AAAA;;AAAA;;AAAA,MAAdC,OAAc,QAAdA,OAAc;AACrC,MAAIC,gBAAgB,GAAG,EAAvB;;AADqC,kBAELhB,QAAQ,CAAC,EAAD,CAFH;AAAA,MAE9BiB,QAF8B;AAAA,MAEpBC,WAFoB;;AAAA,iBAGyBd,OAAO,CAAC;AACpEe,IAAAA,IAAI,EAAE;AAD8D,GAAD,CAHhC;AAAA,MAG7BC,OAH6B,YAG7BA,OAH6B;AAAA,MAGpBC,QAHoB,YAGpBA,QAHoB;AAAA,MAGVC,MAHU,YAGVA,MAHU;AAAA,MAGFC,QAHE,YAGFA,QAHE;AAAA,MAGQC,YAHR,YAGQA,YAHR;;AAAA,yBAMXrB,eAAe,CAACM,gBAAD,CANJ;AAAA,MAM7BgB,MAN6B,oBAM7BA,MAN6B;AAAA,MAMrBC,KANqB,oBAMrBA,KANqB;;AAQrCzB,EAAAA,SAAS,CAAC,YAAM;AACdoB,IAAAA,QAAQ,CAAC;AAAEM,MAAAA,IAAI,EAAE;AAAR,KAAD,EAA2B;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAA3B,CAAR;AACD,GAFQ,EAEN,CAACP,QAAD,CAFM,CAAT;;AAIA,MAAMQ,QAAQ,GAAG,SAAXA,QAAW,CAACC,IAAD,EAAU;AACzBL,IAAAA,MAAM,CAACK,IAAD,CAAN;AACAf,IAAAA,OAAO,CAAC,CAAD,CAAP;AACD,GAHD;;AAKA,SACE;AAAM,IAAA,QAAQ,EAAES,YAAY,CAACK,QAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,CADF,EAIE;AAAK,IAAA,MAAM,EAAE,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AACE,IAAA,KAAK,EAAC,gBADR;AAEE,IAAA,OAAO,EAAC,eAFV;AAGE,IAAA,KAAK,EACHP,MAAM,CAACS,aAAP,IACE,4BACG,0BAAAT,MAAM,CAACS,aAAP,gFAAsBC,IAAtB,MAA+B,UAA/B,IACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAFJ,EAIG,2BAAAV,MAAM,CAACS,aAAP,kFAAsBC,IAAtB,MAA+B,SAA/B,IACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCALJ,CALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAgBE,MAAC,UAAD;AACE,IAAA,EAAE,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADN;AAEE,IAAA,EAAE,EAAC,eAFL;AAGE,IAAA,IAAI,EAAC,eAHP;AAIE,IAAA,YAAY,EAAEN,KAAK,CAACI,IAAN,CAAWC,aAJ3B;AAKE,IAAA,OAAO,EAAEX,OALX;AAME,IAAA,WAAW,EAAC,OANd;AAOE,IAAA,KAAK,EAAE;AACLQ,MAAAA,QAAQ,EAAE,IADL;AAELK,MAAAA,OAAO,EAAE;AAFJ,KAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBF,CADF,CADF,CAJF,EAqCE,MAAC,WAAD;AACE,IAAA,KAAK,EAAC,qBADR;AAEE,IAAA,OAAO,EAAC,qBAFV;AAGE,IAAA,KAAK,EACHX,MAAM,CAACY,mBAAP,IAA8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAJlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE,MAAC,UAAD;AACE,IAAA,EAAE,EAAE,aAAO,QAAP;AAAgB,MAAA,IAAI,EAAE,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADN;AAEE,IAAA,EAAE,EAAC,qBAFL;AAGE,IAAA,IAAI,EAAC,qBAHP;AAIE,IAAA,YAAY,EAAER,KAAK,CAACI,IAAN,CAAWI,mBAJ3B;AAKE,IAAA,OAAO,EAAEd,OALX;AAME,IAAA,WAAW,EAAC,wFANd;AAOE,IAAA,KAAK,EAAE;AACLQ,MAAAA,QAAQ,EAAE;AADL,KAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CArCF,EAwDE,MAAC,WAAD;AACE,IAAA,KAAK,EAAEN,MAAM,CAACa,YAAP,IAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE,MAAC,gBAAD;AACE,IAAA,IAAI,EAAC,cADP;AAEE,IAAA,WAAW,EAAE,qBAACC,KAAD,EAAW;AACtBpB,MAAAA,gBAAgB,GAAGR,aAAa,CAAC4B,KAAD,CAAhC;AACAb,MAAAA,QAAQ,CAAC,cAAD,EAAiBP,gBAAjB,CAAR;AACAE,MAAAA,WAAW,CAACkB,KAAD,CAAX;AACD,KANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CAxDF,CADF,EAsEE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAC,UADZ;AAEE,IAAA,QAAQ,EAAC,QAFX;AAGE,IAAA,OAAO,EAAE;AAAA,aAAMrB,OAAO,CAAC,CAAD,CAAb;AAAA,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,UADF,EAQE;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,QAAQ,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF,CADF,CAtEF,CADF;AAuFD,CAxGD;;GAAMD,a;UAG0DV,O,EAGpCD,e;;;KANtBW,a;AA0GN,eAAeA,aAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { IoIosArrowBack } from 'react-icons/io';\r\nimport { useStateMachine } from 'little-state-machine';\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport { Row, Col, Input, Button } from 'antd';\r\nimport FormControl from 'components/UI/FormControl/FormControl';\r\nimport MapWithSearchBox from 'components/Map/MapSearchBox';\r\nimport { mapDataHelper } from 'components/Map/mapDataHelper';\r\nimport AddListingAction from './AddListingAction';\r\nimport { FormHeader, Title, FormContent, FormAction } from './AddListing.style';\r\n\r\nconst HotelLocation = ({ setStep }) => {\r\n  let tempLocationData = [];\r\n  const [location, setLocation] = useState([]);\r\n  const { control, register, errors, setValue, handleSubmit } = useForm({\r\n    mode: 'onChange',\r\n  });\r\n  const { action, state } = useStateMachine(AddListingAction);\r\n\r\n  useEffect(() => {\r\n    register({ name: 'locationData' }, { required: true });\r\n  }, [register]);\r\n\r\n  const onSubmit = (data) => {\r\n    action(data);\r\n    setStep(4);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      <FormContent>\r\n        <FormHeader>\r\n          <Title>Step 3: Hotel Location</Title>\r\n        </FormHeader>\r\n        <Row gutter={30}>\r\n          <Col sm={12}>\r\n            <FormControl\r\n              label=\"Contact number\"\r\n              htmlFor=\"contactNumber\"\r\n              error={\r\n                errors.contactNumber && (\r\n                  <>\r\n                    {errors.contactNumber?.type === 'required' && (\r\n                      <span>This field is required!</span>\r\n                    )}\r\n                    {errors.contactNumber?.type === 'pattern' && (\r\n                      <span>Please enter your valid number!</span>\r\n                    )}\r\n                  </>\r\n                )\r\n              }\r\n            >\r\n              <Controller\r\n                as={<Input />}\r\n                id=\"contactNumber\"\r\n                name=\"contactNumber\"\r\n                defaultValue={state.data.contactNumber}\r\n                control={control}\r\n                placeholder=\"Phone\"\r\n                rules={{\r\n                  required: true,\r\n                  pattern: /^[0-9]*$/,\r\n                }}\r\n              />\r\n            </FormControl>\r\n          </Col>\r\n        </Row>\r\n        <FormControl\r\n          label=\"Details description\"\r\n          htmlFor=\"locationDescription\"\r\n          error={\r\n            errors.locationDescription && <span>This field is required!</span>\r\n          }\r\n        >\r\n          <Controller\r\n            as={<Input.TextArea rows={5} />}\r\n            id=\"locationDescription\"\r\n            name=\"locationDescription\"\r\n            defaultValue={state.data.locationDescription}\r\n            control={control}\r\n            placeholder=\"Write your hotel direction in details , it may help traveler to find your hotel easily\"\r\n            rules={{\r\n              required: true,\r\n            }}\r\n          />\r\n        </FormControl>\r\n        <FormControl\r\n          error={errors.locationData && <span>This field is required!</span>}\r\n        >\r\n          <MapWithSearchBox\r\n            name=\"locationData\"\r\n            updatevalue={(value) => {\r\n              tempLocationData = mapDataHelper(value);\r\n              setValue('locationData', tempLocationData);\r\n              setLocation(value);\r\n            }}\r\n          />\r\n        </FormControl>\r\n      </FormContent>\r\n      <FormAction>\r\n        <div className=\"inner-wrapper\">\r\n          <Button\r\n            className=\"back-btn\"\r\n            htmlType=\"button\"\r\n            onClick={() => setStep(2)}\r\n          >\r\n            <IoIosArrowBack /> Back\r\n          </Button>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Next\r\n          </Button>\r\n        </div>\r\n      </FormAction>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default HotelLocation;\r\n"]},"metadata":{},"sourceType":"module"}