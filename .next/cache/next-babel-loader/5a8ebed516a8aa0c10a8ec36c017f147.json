{"ast":null,"code":"import _Checkbox from \"antd/lib/checkbox\";\n\nvar _jsxFileName = \"C:\\\\wamp64\\\\www\\\\Reactapps\\\\my-app\\\\Apnaghar-frontend\\\\TripFinder\\\\packages\\\\hotel-next\\\\pages\\\\listing.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect, useContext } from 'react';\nimport Head from 'next/head';\nimport dynamic from 'next/dynamic';\nimport Sticky from 'react-stickynode';\nimport Toolbar from 'components/UI/Toolbar/Toolbar';\nimport CategorySearch from 'container/Listing/Search/CategorySearch/CategorySearch';\nimport SectionGrid from 'components/SectionGrid/SectionGrid';\nimport { PostPlaceholder } from 'components/UI/ContentLoader/ContentLoader';\nimport ListingMap from 'container/Listing/ListingMap';\nimport { SearchContext } from 'context/SearchProvider';\nimport { Paginator, SearchedData, SearchStateKeyCheck } from 'library/helpers/get_api_data';\nimport { SINGLE_POST_PAGE } from 'settings/constant';\nimport { LISTING_PAGE_POST_LIMIT, LISTING_PAGE_COLUMN_WIDTH_WITHOUT_MAP, LISTING_PAGE_COLUMN_WIDTH_WITH_MAP } from 'settings/config';\nimport ListingWrapper, { PostsWrapper, ShowMapCheckbox } from 'container/Listing/Listing.style';\nvar FilterDrawer = dynamic(_c = function _c() {\n  return import('container/Listing/Search/MobileSearchView');\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('container/Listing/Search/MobileSearchView')];\n    },\n    modules: ['container/Listing/Search/MobileSearchView']\n  }\n});\n_c2 = FilterDrawer;\nexport var __N_SSP = true;\nexport default function ListingPage(_ref) {\n  _s();\n\n  var processedData = _ref.processedData,\n      deviceType = _ref.deviceType;\n\n  var _useContext = useContext(SearchContext),\n      state = _useContext.state,\n      dispatch = _useContext.dispatch;\n\n  var statekey = SearchStateKeyCheck(state);\n\n  var _useState = useState(processedData.slice(0, LISTING_PAGE_POST_LIMIT) || []),\n      posts = _useState[0],\n      setPosts = _useState[1];\n\n  var _useState2 = useState(false),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(false),\n      showMap = _useState3[0],\n      setShowMap = _useState3[1];\n\n  useEffect(function () {\n    if (statekey === true) {\n      var newData = SearchedData(processedData);\n      setPosts(newData);\n    } else {\n      setPosts(processedData.slice(0, LISTING_PAGE_POST_LIMIT) || []);\n    }\n  }, [statekey]);\n\n  var handleMapToggle = function handleMapToggle() {\n    setShowMap(function (showMap) {\n      return !showMap;\n    });\n  };\n\n  var handleLoadMore = function handleLoadMore() {\n    setLoading(true);\n    setTimeout(function () {\n      var data = Paginator(posts, processedData, LISTING_PAGE_POST_LIMIT);\n      setPosts(data);\n      setLoading(false);\n    }, 1000);\n  };\n\n  var columnWidth = LISTING_PAGE_COLUMN_WIDTH_WITHOUT_MAP;\n\n  if (showMap) {\n    columnWidth = LISTING_PAGE_COLUMN_WIDTH_WITH_MAP;\n  }\n\n  var columnCount = 'col-24';\n\n  if (deviceType === 'desktop' && showMap === true) {\n    columnCount = 'col-12';\n  }\n\n  return __jsx(ListingWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, \"Listing | A react next listing template\")), __jsx(Sticky, {\n    top: 82,\n    innerZ: 999,\n    activeClass: \"isHeaderSticky\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, __jsx(Toolbar, {\n    left: deviceType === 'desktop' ? __jsx(CategorySearch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 40\n      }\n    }) : __jsx(FilterDrawer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 61\n      }\n    }),\n    right: __jsx(ShowMapCheckbox, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }, __jsx(_Checkbox, {\n      defaultChecked: false,\n      onChange: handleMapToggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 15\n      }\n    }, \"Show map\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  })), __jsx(PostsWrapper, {\n    className: columnCount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, __jsx(SectionGrid, {\n    link: SINGLE_POST_PAGE,\n    columnWidth: columnWidth,\n    deviceType: deviceType,\n    data: posts,\n    totalItem: processedData.length,\n    limit: LISTING_PAGE_POST_LIMIT,\n    loading: loading,\n    handleLoadMore: handleLoadMore,\n    placeholder: __jsx(PostPlaceholder, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 24\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  })), showMap && __jsx(ListingMap, {\n    loading: loading,\n    mapData: posts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 19\n    }\n  }));\n}\n\n_s(ListingPage, \"2Yen1b4yyWMlLrHuMFO3+Lb4qZM=\");\n\n_c3 = ListingPage;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"FilterDrawer$dynamic\");\n$RefreshReg$(_c2, \"FilterDrawer\");\n$RefreshReg$(_c3, \"ListingPage\");","map":{"version":3,"sources":["C:/wamp64/www/Reactapps/my-app/Apnaghar-frontend/TripFinder/packages/hotel-next/pages/listing.js"],"names":["useState","useEffect","useContext","Head","dynamic","Sticky","Toolbar","CategorySearch","SectionGrid","PostPlaceholder","ListingMap","SearchContext","Paginator","SearchedData","SearchStateKeyCheck","SINGLE_POST_PAGE","LISTING_PAGE_POST_LIMIT","LISTING_PAGE_COLUMN_WIDTH_WITHOUT_MAP","LISTING_PAGE_COLUMN_WIDTH_WITH_MAP","ListingWrapper","PostsWrapper","ShowMapCheckbox","FilterDrawer","ListingPage","processedData","deviceType","state","dispatch","statekey","slice","posts","setPosts","loading","setLoading","showMap","setShowMap","newData","handleMapToggle","handleLoadMore","setTimeout","data","columnWidth","columnCount","length"],"mappings":"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","sourcesContent":["import { useState, useEffect, useContext } from 'react';\r\nimport Head from 'next/head';\r\nimport dynamic from 'next/dynamic';\r\nimport Sticky from 'react-stickynode';\r\nimport Toolbar from 'components/UI/Toolbar/Toolbar';\r\nimport CategorySearch from 'container/Listing/Search/CategorySearch/CategorySearch';\r\nimport { Checkbox } from 'antd';\r\nimport SectionGrid from 'components/SectionGrid/SectionGrid';\r\nimport { PostPlaceholder } from 'components/UI/ContentLoader/ContentLoader';\r\nimport ListingMap from 'container/Listing/ListingMap';\r\nimport { SearchContext } from 'context/SearchProvider';\r\nimport GetAPIData, {\r\n  Paginator,\r\n  SearchedData,\r\n  SearchStateKeyCheck,\r\n  ProcessAPIData,\r\n} from 'library/helpers/get_api_data';\r\nimport { getDeviceType } from 'library/helpers/get_device_type';\r\nimport { SINGLE_POST_PAGE } from 'settings/constant';\r\nimport {\r\n  LISTING_PAGE_POST_LIMIT,\r\n  LISTING_PAGE_COLUMN_WIDTH_WITHOUT_MAP,\r\n  LISTING_PAGE_COLUMN_WIDTH_WITH_MAP,\r\n} from 'settings/config';\r\nimport ListingWrapper, {\r\n  PostsWrapper,\r\n  ShowMapCheckbox,\r\n} from 'container/Listing/Listing.style';\r\n\r\nconst FilterDrawer = dynamic(() =>\r\n  import('container/Listing/Search/MobileSearchView')\r\n);\r\n\r\nexport default function ListingPage({ processedData, deviceType }) {\r\n  const { state, dispatch } = useContext(SearchContext);\r\n  const statekey = SearchStateKeyCheck(state);\r\n  const [posts, setPosts] = useState(\r\n    processedData.slice(0, LISTING_PAGE_POST_LIMIT) || []\r\n  );\r\n  const [loading, setLoading] = useState(false);\r\n  const [showMap, setShowMap] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (statekey === true) {\r\n      const newData = SearchedData(processedData);\r\n      setPosts(newData);\r\n    } else {\r\n      setPosts(processedData.slice(0, LISTING_PAGE_POST_LIMIT) || []);\r\n    }\r\n  }, [statekey]);\r\n\r\n  const handleMapToggle = () => {\r\n    setShowMap((showMap) => !showMap);\r\n  };\r\n\r\n  const handleLoadMore = () => {\r\n    setLoading(true);\r\n    setTimeout(() => {\r\n      const data = Paginator(posts, processedData, LISTING_PAGE_POST_LIMIT);\r\n      setPosts(data);\r\n      setLoading(false);\r\n    }, 1000);\r\n  };\r\n\r\n  let columnWidth = LISTING_PAGE_COLUMN_WIDTH_WITHOUT_MAP;\r\n  if (showMap) {\r\n    columnWidth = LISTING_PAGE_COLUMN_WIDTH_WITH_MAP;\r\n  }\r\n\r\n  let columnCount = 'col-24';\r\n  if (deviceType === 'desktop' && showMap === true) {\r\n    columnCount = 'col-12';\r\n  }\r\n\r\n  return (\r\n    <ListingWrapper>\r\n      <Head>\r\n        <title>Listing | A react next listing template</title>\r\n      </Head>\r\n\r\n      <Sticky top={82} innerZ={999} activeClass=\"isHeaderSticky\">\r\n        <Toolbar\r\n          left={\r\n            deviceType === 'desktop' ? <CategorySearch /> : <FilterDrawer />\r\n          }\r\n          right={\r\n            <ShowMapCheckbox>\r\n              <Checkbox defaultChecked={false} onChange={handleMapToggle}>\r\n                Show map\r\n              </Checkbox>\r\n            </ShowMapCheckbox>\r\n          }\r\n        />\r\n      </Sticky>\r\n\r\n      <PostsWrapper className={columnCount}>\r\n        <SectionGrid\r\n          link={SINGLE_POST_PAGE}\r\n          columnWidth={columnWidth}\r\n          deviceType={deviceType}\r\n          data={posts}\r\n          totalItem={processedData.length}\r\n          limit={LISTING_PAGE_POST_LIMIT}\r\n          loading={loading}\r\n          handleLoadMore={handleLoadMore}\r\n          placeholder={<PostPlaceholder />}\r\n        />\r\n      </PostsWrapper>\r\n      {showMap && <ListingMap loading={loading} mapData={posts} />}\r\n    </ListingWrapper>\r\n  );\r\n}\r\n\r\nexport async function getServerSideProps(context) {\r\n  const { req } = context;\r\n  const apiUrl = [\r\n    {\r\n      endpoint: 'hotel',\r\n      name: 'listingHotel',\r\n    },\r\n  ];\r\n  const pageData = await GetAPIData(apiUrl);\r\n  const processedData = ProcessAPIData(pageData);\r\n  const deviceType = getDeviceType(req);\r\n  return {\r\n    props: { processedData, deviceType },\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}