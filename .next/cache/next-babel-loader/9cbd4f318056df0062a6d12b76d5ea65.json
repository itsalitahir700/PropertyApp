{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\wamp64\\\\www\\\\Reactapps\\\\my-app\\\\Apnaghar-frontend\\\\TripFinder\\\\packages\\\\hotel-next\\\\components\\\\UI\\\\DatePicker\\\\ReactDates.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport 'react-dates/initialize';\nimport { DateRangePicker } from 'react-dates';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { ReactDatesStyleWrapper } from './ReactDates.style';\n/*\r\n * For Localization enable this code [example : French language as \"fr\"]\r\n */\n// import moment from 'moment';\n// import 'moment/locale/fr';\n\nvar DateRangePickerBox = /*#__PURE__*/function (_Component) {\n  _inherits(DateRangePickerBox, _Component);\n\n  var _super = _createSuper(DateRangePickerBox);\n\n  function DateRangePickerBox(props) {\n    var _this;\n\n    _classCallCheck(this, DateRangePickerBox);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"onDateChangeFunc\", function (_ref) {\n      var startDate = _ref.startDate,\n          endDate = _ref.endDate;\n      var dateFormat = _this.state.dateFormat;\n\n      _this.setState({\n        startDate,\n        endDate\n      });\n\n      if (startDate !== null && endDate !== null) {\n        _this.props.updateSearchData({\n          setStartDate: startDate.format(dateFormat),\n          setEndDate: endDate.format(dateFormat)\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onFocusChangeFunc\", function (focusedInput) {\n      return _this.setState({\n        focusedInput\n      });\n    });\n\n    var separator = _this.props.item && _this.props.item.separator ? _this.props.item.separator : '/';\n\n    var _dateFormat = _this.props.item && _this.props.item.format ? _this.props.item.format : 'llll';\n\n    _this.state = {\n      focusedInput: null,\n      startDate: _this.props.startDate ? _this.props.startDate : null,\n      endDate: _this.props.endDate ? _this.props.endDate : null,\n      dateFormat: _dateFormat,\n      separator\n    };\n    _this.onDateChangeFunc = _this.onDateChangeFunc.bind(_assertThisInitialized(_this));\n    _this.onFocusChangeFunc = _this.onFocusChangeFunc.bind(_assertThisInitialized(_this));\n    /*\r\n     * For Localization enable this code [example : French language as \"fr\"]\r\n     */\n    // moment.locale('fr');\n\n    return _this;\n  }\n\n  _createClass(DateRangePickerBox, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          focusedInput = _this$state.focusedInput,\n          startDate = _this$state.startDate,\n          endDate = _this$state.endDate; // DateRangePickerBox props list\n\n      var _this$props = this.props,\n          className = _this$props.className,\n          startDateId = _this$props.startDateId,\n          endDateId = _this$props.endDateId,\n          startDatePlaceholderText = _this$props.startDatePlaceholderText,\n          endDatePlaceholderText = _this$props.endDatePlaceholderText,\n          disabled = _this$props.disabled,\n          showClearDates = _this$props.showClearDates,\n          isRTL = _this$props.isRTL,\n          orientation = _this$props.orientation,\n          anchorDirection = _this$props.anchorDirection,\n          withPortal = _this$props.withPortal,\n          withFullScreenPortal = _this$props.withFullScreenPortal,\n          small = _this$props.small,\n          block = _this$props.block,\n          numberOfMonths = _this$props.numberOfMonths,\n          regular = _this$props.regular,\n          noBorder = _this$props.noBorder; // Add all classs to an array **************\n\n      var addAllClasses = ['date_picker']; // className prop checking **************\n\n      if (className) {\n        addAllClasses.push(className);\n      } // React-Dates DateRangePicker Props List\n\n\n      var defaultCalenderProps = {\n        startDateId: startDateId ? startDateId : 'start_unique_id',\n        endDateId: endDateId ? endDateId : 'end_date_unique_id',\n        startDate,\n        endDate,\n        focusedInput,\n        onFocusChange: this.onFocusChangeFunc,\n        onDatesChange: this.onDateChangeFunc,\n        startDatePlaceholderText,\n        endDatePlaceholderText,\n        disabled,\n        isRTL,\n        showClearDates: showClearDates ? showClearDates : false,\n        orientation,\n        anchorDirection,\n        withPortal,\n        withFullScreenPortal,\n        small,\n        numberOfMonths: numberOfMonths ? numberOfMonths : 2,\n        block,\n        regular,\n        noBorder\n      };\n      return __jsx(ReactDatesStyleWrapper, {\n        className: addAllClasses.join(' '),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 7\n        }\n      }, __jsx(DateRangePicker, _extends({}, defaultCalenderProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 9\n        }\n      })));\n    }\n  }]);\n\n  return DateRangePickerBox;\n}(Component);\n\nDateRangePickerBox.propTypes = {\n  /** startDateId of the date-picker field */\n  startDateId: PropTypes.string.isRequired,\n\n  /** endDateId of the date-picker field */\n  endDateId: PropTypes.string.isRequired,\n  //\n\n  /** startDatePlaceholderText of the date-picker field */\n  startDatePlaceholderText: PropTypes.string,\n\n  /** endDatePlaceholderText of the date-picker field */\n  endDatePlaceholderText: PropTypes.string,\n\n  /** disabled of the date-picker field */\n  disabled: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['START_DATE', 'END_DATE'])]),\n\n  /** showClearDates of the date-picker field */\n  showClearDates: PropTypes.bool,\n\n  /** isRTL of the date-picker field */\n  isRTL: PropTypes.bool,\n\n  /** orientation of the date-picker field */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /** anchorDirection of the date-picker field */\n  anchorDirection: PropTypes.oneOf(['left', 'right']),\n\n  /** withPortal of the date-picker field */\n  withPortal: PropTypes.bool,\n\n  /** withFullScreenPortal of the date-picker field */\n  withFullScreenPortal: PropTypes.bool,\n\n  /** small of the date-picker field */\n  small: PropTypes.bool,\n\n  /** numberOfMonths of the date-picker field */\n  numberOfMonths: PropTypes.number,\n\n  /** block of the date-picker field */\n  block: PropTypes.bool,\n\n  /** regular of the date-picker field */\n  regular: PropTypes.bool,\n\n  /** noBorder of the date-picker field */\n  noBorder: PropTypes.bool,\n\n  /** updateSearchData of the date-picker field to send component data to parent component */\n  updateSearchData: PropTypes.func\n};\nexport default DateRangePickerBox;","map":{"version":3,"sources":["C:/wamp64/www/Reactapps/my-app/Apnaghar-frontend/TripFinder/packages/hotel-next/components/UI/DatePicker/ReactDates.js"],"names":["DateRangePicker","React","Component","PropTypes","ReactDatesStyleWrapper","DateRangePickerBox","props","startDate","endDate","dateFormat","state","setState","updateSearchData","setStartDate","format","setEndDate","focusedInput","separator","item","onDateChangeFunc","bind","onFocusChangeFunc","className","startDateId","endDateId","startDatePlaceholderText","endDatePlaceholderText","disabled","showClearDates","isRTL","orientation","anchorDirection","withPortal","withFullScreenPortal","small","block","numberOfMonths","regular","noBorder","addAllClasses","push","defaultCalenderProps","onFocusChange","onDatesChange","join","propTypes","string","isRequired","oneOfType","bool","oneOf","number","func"],"mappings":"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","sourcesContent":["import 'react-dates/initialize';\r\nimport { DateRangePicker } from 'react-dates';\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { ReactDatesStyleWrapper } from './ReactDates.style';\r\n/*\r\n * For Localization enable this code [example : French language as \"fr\"]\r\n */\r\n// import moment from 'moment';\r\n// import 'moment/locale/fr';\r\n\r\nclass DateRangePickerBox extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const separator =\r\n      this.props.item && this.props.item.separator\r\n        ? this.props.item.separator\r\n        : '/';\r\n    const dateFormat =\r\n      this.props.item && this.props.item.format\r\n        ? this.props.item.format\r\n        : 'llll';\r\n    this.state = {\r\n      focusedInput: null,\r\n      startDate: this.props.startDate ? this.props.startDate : null,\r\n      endDate: this.props.endDate ? this.props.endDate : null,\r\n      dateFormat,\r\n      separator,\r\n    };\r\n    this.onDateChangeFunc = this.onDateChangeFunc.bind(this);\r\n    this.onFocusChangeFunc = this.onFocusChangeFunc.bind(this);\r\n    /*\r\n     * For Localization enable this code [example : French language as \"fr\"]\r\n     */\r\n    // moment.locale('fr');\r\n  }\r\n\r\n  onDateChangeFunc = ({ startDate, endDate }) => {\r\n    const { dateFormat } = this.state;\r\n    this.setState({ startDate, endDate });\r\n    if (startDate !== null && endDate !== null) {\r\n      this.props.updateSearchData({\r\n        setStartDate: startDate.format(dateFormat),\r\n        setEndDate: endDate.format(dateFormat),\r\n      });\r\n    }\r\n  };\r\n\r\n  onFocusChangeFunc = (focusedInput) => {\r\n    return this.setState({ focusedInput });\r\n  };\r\n\r\n  render() {\r\n    const { focusedInput, startDate, endDate } = this.state;\r\n    // DateRangePickerBox props list\r\n    const {\r\n      className,\r\n      startDateId,\r\n      endDateId,\r\n      startDatePlaceholderText,\r\n      endDatePlaceholderText,\r\n      disabled,\r\n      showClearDates,\r\n      isRTL,\r\n      orientation,\r\n      anchorDirection,\r\n      withPortal,\r\n      withFullScreenPortal,\r\n      small,\r\n      block,\r\n      numberOfMonths,\r\n      regular,\r\n      noBorder,\r\n    } = this.props;\r\n\r\n    // Add all classs to an array **************\r\n    const addAllClasses = ['date_picker'];\r\n    // className prop checking **************\r\n    if (className) {\r\n      addAllClasses.push(className);\r\n    }\r\n\r\n    // React-Dates DateRangePicker Props List\r\n    const defaultCalenderProps = {\r\n      startDateId: startDateId ? startDateId : 'start_unique_id',\r\n      endDateId: endDateId ? endDateId : 'end_date_unique_id',\r\n      startDate,\r\n      endDate,\r\n      focusedInput,\r\n      onFocusChange: this.onFocusChangeFunc,\r\n      onDatesChange: this.onDateChangeFunc,\r\n      startDatePlaceholderText,\r\n      endDatePlaceholderText,\r\n      disabled,\r\n      isRTL,\r\n      showClearDates: showClearDates ? showClearDates : false,\r\n      orientation,\r\n      anchorDirection,\r\n      withPortal,\r\n      withFullScreenPortal,\r\n      small,\r\n      numberOfMonths: numberOfMonths ? numberOfMonths : 2,\r\n      block,\r\n      regular,\r\n      noBorder,\r\n    };\r\n\r\n    return (\r\n      <ReactDatesStyleWrapper className={addAllClasses.join(' ')}>\r\n        <DateRangePicker {...defaultCalenderProps} />\r\n      </ReactDatesStyleWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nDateRangePickerBox.propTypes = {\r\n  /** startDateId of the date-picker field */\r\n  startDateId: PropTypes.string.isRequired,\r\n  /** endDateId of the date-picker field */\r\n  endDateId: PropTypes.string.isRequired, //\r\n  /** startDatePlaceholderText of the date-picker field */\r\n  startDatePlaceholderText: PropTypes.string,\r\n  /** endDatePlaceholderText of the date-picker field */\r\n  endDatePlaceholderText: PropTypes.string,\r\n  /** disabled of the date-picker field */\r\n  disabled: PropTypes.oneOfType([\r\n    PropTypes.bool,\r\n    PropTypes.oneOf(['START_DATE', 'END_DATE']),\r\n  ]),\r\n\r\n  /** showClearDates of the date-picker field */\r\n  showClearDates: PropTypes.bool,\r\n  /** isRTL of the date-picker field */\r\n  isRTL: PropTypes.bool,\r\n  /** orientation of the date-picker field */\r\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\r\n  /** anchorDirection of the date-picker field */\r\n  anchorDirection: PropTypes.oneOf(['left', 'right']),\r\n  /** withPortal of the date-picker field */\r\n  withPortal: PropTypes.bool,\r\n  /** withFullScreenPortal of the date-picker field */\r\n  withFullScreenPortal: PropTypes.bool,\r\n  /** small of the date-picker field */\r\n  small: PropTypes.bool,\r\n  /** numberOfMonths of the date-picker field */\r\n  numberOfMonths: PropTypes.number,\r\n  /** block of the date-picker field */\r\n  block: PropTypes.bool,\r\n  /** regular of the date-picker field */\r\n  regular: PropTypes.bool,\r\n  /** noBorder of the date-picker field */\r\n  noBorder: PropTypes.bool,\r\n  /** updateSearchData of the date-picker field to send component data to parent component */\r\n  updateSearchData: PropTypes.func,\r\n};\r\n\r\nexport default DateRangePickerBox;\r\n"]},"metadata":{},"sourceType":"module"}