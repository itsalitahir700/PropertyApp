{"ast":null,"code":"import _Card from \"antd/lib/card\";\nimport _Button from \"antd/lib/button\";\nimport _Row from \"antd/lib/row\";\nimport _Col from \"antd/lib/col\";\nimport _Select from \"antd/lib/select\";\nimport _Form from \"antd/lib/form\";\nimport _Radio from \"antd/lib/radio\";\nimport _Alert from \"antd/lib/alert\";\nimport _Input from \"antd/lib/input\";\nimport _message from \"antd/lib/message\";\nimport _Upload from \"antd/lib/upload\";\nvar _jsxFileName = \"C:\\\\wamp64\\\\www\\\\Reactapps\\\\my-app\\\\Apnaghar-frontend\\\\TripFinder\\\\packages\\\\hotel-next\\\\container\\\\AddListing\\\\AddProperty.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport { padding } from \"styled-system\";\nimport axios from \"axios\";\nimport { getPropType, getPropSubType, getCountries, getCities, getLocations, getCurrency, getArea } from \"../../settings/service\";\n\nconst AddProperty = () => {\n  const {\n    0: loading,\n    1: setloading\n  } = useState(false);\n  const {\n    0: imageUrl,\n    1: setimageUrl\n  } = useState(\"\");\n  const {\n    0: purpose,\n    1: setpurpose\n  } = useState(\"\");\n  const {\n    0: country,\n    1: setCountry\n  } = useState(\"\");\n  const {\n    0: city,\n    1: setCity\n  } = useState(\"\");\n  const {\n    0: location,\n    1: setLocation\n  } = useState(\"\");\n  const {\n    0: title,\n    1: setTitle\n  } = useState(\"\");\n  const {\n    0: details,\n    1: setDetails\n  } = useState(\"\");\n  const {\n    0: price,\n    1: setPrice\n  } = useState(\"\");\n  const {\n    0: pricecurrency,\n    1: setCurrency\n  } = useState(\"\");\n  const {\n    0: localArea,\n    1: setLocalArea\n  } = useState(\"\");\n  const {\n    0: areaUnit,\n    1: setareaUnit\n  } = useState(\"\");\n  const {\n    0: bedrooms,\n    1: setBedrooms\n  } = useState(\"\");\n  const {\n    0: bathrooms,\n    1: setBathrooms\n  } = useState(\"\");\n  const {\n    0: expireAfter,\n    1: setExpireAfter\n  } = useState(\"\");\n  const {\n    0: phone,\n    1: setPhone\n  } = useState(\"\");\n  const {\n    0: email,\n    1: setEmail\n  } = useState(\"\");\n  const {\n    0: files,\n    1: setFiles\n  } = useState([]);\n  const {\n    0: propdeveloper,\n    1: setPropdeveloper\n  } = useState(\"\");\n  const {\n    0: constructionStatus,\n    1: setConstructionStatus\n  } = useState(\"\"); // API RESULTS\n\n  const {\n    0: proptypedata,\n    1: setproptypedata\n  } = useState([]);\n  const {\n    0: citieslist,\n    1: setciteslist\n  } = useState([]);\n  const {\n    0: countrieslist,\n    1: setcountrieslist\n  } = useState([]);\n  const {\n    0: locationslist,\n    1: setlocationslist\n  } = useState([]);\n  const {\n    0: currencylist,\n    1: setcurrencylist\n  } = useState([]);\n  const {\n    0: proptypevalue,\n    1: setproptypevalue\n  } = useState([]);\n  const {\n    0: propsubtypedata,\n    1: setpropsubtypedata\n  } = useState([]);\n  const {\n    0: propsubtypedataall,\n    1: setpropsubtypedataall\n  } = useState([]);\n  const {\n    0: arealist,\n    1: setarealist\n  } = useState([]);\n  let propType = \"\";\n  let propsubType = \"\";\n  let cities = \"\";\n  let counties = \"\";\n  let locations = \"\";\n  let currency = \"\";\n  let area = \"\";\n  let response = \"\";\n  const {\n    Dragger\n  } = _Upload;\n  const props = {\n    name: \"file\",\n    multiple: true,\n    action: \"https://www.mocky.io/v2/5cc8019d300000980a055e76\",\n\n    onChange(info) {\n      const {\n        status\n      } = info.file;\n\n      if (status !== \"uploading\") {\n        console.log(info.file, info.fileList);\n      }\n\n      if (status === \"done\") {\n        _message.success(`${info.file.name} file uploaded successfully.`);\n      } else if (status === \"error\") {\n        _message.error(`${info.file.name} file upload failed.`);\n      }\n    }\n\n  };\n  useEffect(() => {\n    functproptype();\n    functcities();\n    functcountries();\n    functcurrency();\n    funcpropsbtype();\n    functarea();\n  }, []);\n\n  async function functproptype() {\n    propType = await getPropType();\n    setproptypedata(propType.data);\n  }\n\n  async function functcountries() {\n    counties = await getCountries();\n    setcountrieslist(counties.data);\n  }\n\n  async function functcities() {\n    cities = await getCities();\n    setciteslist(cities.data);\n  }\n\n  async function functlocation(cityId) {\n    locations = await getLocations(cityId);\n    setlocationslist(locations.data);\n  }\n\n  async function functcurrency() {\n    currency = await getCurrency();\n    setcurrencylist(currency.data);\n  }\n\n  async function funcpropsbtype() {\n    propsubType = await getPropSubType();\n    setpropsubtypedataall(propsubType.data);\n  }\n\n  async function functarea() {\n    area = await getArea();\n    setarealist(area.data);\n  }\n\n  const handleSetProperty = e => {\n    const main_property_cat = e.target.value;\n    setproptypevalue(e.target.value);\n    let filtered_sub_cat = propsubtypedataall.filter(a => {\n      return a.ptypeCat == main_property_cat;\n    });\n    setpropsubtypedata(filtered_sub_cat);\n  };\n\n  const handleimage = event => {\n    console.log(\"images\", event.target.files);\n    setFiles(Array.from(event.target.files));\n  };\n\n  const submitHandler = e => {\n    let formData = new FormData(); //formdata object\n\n    const data = `{  \"postPurpose\": \"${purpose}\", \n    \"propType\": ${proptypevalue},\n    \"postTitle\": \"${title}\",\n    \"postDescription\": \"${details}\",\n    \"postLocation\": \"${location}\",\n    \"postCity\": ${city},\n    \"postCountry\": \"${country}\", \n    \"postTel\": ${phone}, \n    \"postPrice\": ${price}, \n    \"postPriceCurrency\": \"${pricecurrency}\", \n    \"postPropArea\": ${localArea},\n    \"postPropAreaUnit\":\"${areaUnit}\",\n    \"postConstructionStatus\": \"${constructionStatus}\",\n    \"postPropDeveloper\": \"${propdeveloper}\"}`;\n    formData.append(\"newPost\", data);\n    formData.append(\"files\", files);\n\n    for (var key of formData.entries()) {\n      console.log(\"yai data\", key[0] + \", \" + key[1]);\n    }\n\n    axios({\n      method: \"post\",\n      url: `http://ec2-13-229-109-204.ap-southeast-1.compute.amazonaws.com:8080/apna/v1/posts`,\n      data: formData,\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n        Authorization: \"Basic YXBuYTphcG5hZ2hhcjEyMzQ=\",\n        Cookie: \"JSESSIONID=E2A8BF2571BA6B875803BD545D43BBD6\"\n      }\n    }).then(function (response) {\n      //handle success\n      console.log(response.data);\n    }).catch(function (response) {\n      //handle error\n      console.log(response);\n    });\n  };\n\n  const {\n    TextArea\n  } = _Input;\n  return __jsx(_Card, {\n    style: {\n      paddingLeft: \"10rem\",\n      paddingRight: \"10rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 5\n    }\n  }, __jsx(_Alert, {\n    message: \"PROPERTY TYPE AND LOCATION\",\n    type: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }\n  }), __jsx(_Form, {\n    labelCol: {\n      span: 4\n    },\n    wrapperCol: {\n      span: 14\n    },\n    layout: \"horizontal\",\n    style: {\n      marginTop: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }\n  }, __jsx(_Form.Item, {\n    label: \"Purpose\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 9\n    }\n  }, __jsx(_Radio.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 11\n    }\n  }, __jsx(_Radio.Button, {\n    onClick: e => setpurpose(e.target.value),\n    value: \"B\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }\n  }, \"Buy\"), __jsx(_Radio.Button, {\n    onClick: e => setpurpose(e.target.value),\n    value: \"R\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 13\n    }\n  }, \"Rent\"), __jsx(_Radio.Button, {\n    onClick: e => setpurpose(e.target.value),\n    value: \"P\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }\n  }, \"Project\"))), __jsx(_Form.Item, {\n    label: \"Property Type\",\n    name: \"size\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 9\n    }\n  }, __jsx(_Radio.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 11\n    }\n  }, proptypedata && proptypedata.length !== 0 ? proptypedata.map(item => {\n    return __jsx(\"span\", {\n      key: item.code,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 21\n      }\n    }, __jsx(_Radio.Button, {\n      value: item.code,\n      onClick: handleSetProperty,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 23\n      }\n    }, item.name));\n  }) : \"No Records Found\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 11\n    }\n  }), __jsx(_Radio.Group, {\n    style: {\n      marginTop: \"5px\",\n      marginLeft: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 11\n    }\n  }, propsubtypedata && propsubtypedata.length !== 0 ? propsubtypedata.map((item, index) => {\n    return __jsx(\"span\", {\n      key: item.index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 21\n      }\n    }, __jsx(_Radio.Button, {\n      value: item.ptypeName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 23\n      }\n    }, item.ptypeName));\n  }) : \"No Records Found\")), __jsx(_Form.Item, {\n    label: \"Select country\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 9\n    }\n  }, __jsx(_Select, {\n    value: country,\n    onChange: e => {\n      setCountry(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 11\n    }\n  }, countrieslist && countrieslist.length !== 0 ? countrieslist.map((item, index) => {\n    return __jsx(_Select.Option, {\n      value: item.countryCode,\n      key: item.countryCode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 21\n      }\n    }, item.countryName);\n  }) : \"No Records Found\")), __jsx(_Form.Item, {\n    label: \"Select city\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 9\n    }\n  }, __jsx(_Select, {\n    value: city,\n    onChange: e => {\n      setCity(e);\n      functlocation(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 11\n    }\n  }, citieslist && citieslist.length !== 0 ? citieslist.map((item, index) => {\n    return __jsx(_Select.Option, {\n      value: item.cityId,\n      key: item.cityId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 21\n      }\n    }, item.cityName);\n  }) : \"No Records Found\")), __jsx(_Form.Item, {\n    label: \"Select Location\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 9\n    }\n  }, __jsx(_Select, {\n    value: location,\n    onChange: e => setLocation(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 11\n    }\n  }, locationslist && locationslist.length !== 0 ? locationslist.map((item, index) => {\n    return __jsx(_Select.Option, {\n      value: item.plName,\n      key: item.plName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 21\n      }\n    }, item.plName);\n  }) : \"No Records Found\"))), __jsx(_Alert, {\n    message: \"PROPERTY DETAILS\",\n    type: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 7\n    }\n  }), __jsx(_Form, {\n    labelCol: {\n      span: 4\n    },\n    wrapperCol: {\n      span: 14\n    },\n    layout: \"horizontal\",\n    style: {\n      marginTop: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 7\n    }\n  }, __jsx(_Form.Item, {\n    label: \"Property Title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 9\n    }\n  }, __jsx(_Input, {\n    value: title,\n    onChange: e => setTitle(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 11\n    }\n  })), __jsx(_Form.Item, {\n    label: \"Property Details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 9\n    }\n  }, __jsx(TextArea, {\n    value: details,\n    onChange: e => setDetails(e.target.value),\n    rows: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 11\n    }\n  })), __jsx(_Form.Item, {\n    label: \"Property Developer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 9\n    }\n  }, __jsx(_Input, {\n    value: propdeveloper,\n    onChange: e => setPropdeveloper(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 11\n    }\n  })), __jsx(_Form.Item, {\n    label: \"Construction Status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 9\n    }\n  }, __jsx(_Select, {\n    value: constructionStatus,\n    onChange: e => setConstructionStatus(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 11\n    }\n  }, __jsx(_Select.Option, {\n    value: \"C\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 13\n    }\n  }, \"Completed\"), __jsx(_Select.Option, {\n    value: \"U\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 13\n    }\n  }, \"UNDERCONSTRUCTION\"))), __jsx(_Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 9\n    }\n  }, __jsx(_Col, {\n    lg: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 11\n    }\n  }, __jsx(_Form.Item, {\n    label: \"All inclusive Price\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 13\n    }\n  }, __jsx(_Input, {\n    value: price,\n    onChange: e => setPrice(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 15\n    }\n  }))), __jsx(_Col, {\n    lg: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 11\n    }\n  }, __jsx(_Form.Item, {\n    label: \"Select Currency\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 13\n    }\n  }, __jsx(_Select, {\n    value: pricecurrency,\n    onChange: e => setCurrency(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 15\n    }\n  }, currencylist && currencylist.length !== 0 ? currencylist.map((item, index) => {\n    return __jsx(_Select.Option, {\n      value: item.currencyCode,\n      key: item.currencyCode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 25\n      }\n    }, item.currencyCode);\n  }) : \"No Records Found\")))), __jsx(_Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 9\n    }\n  }, __jsx(_Col, {\n    lg: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 11\n    }\n  }, __jsx(_Form.Item, {\n    label: \"Land Area\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 13\n    }\n  }, __jsx(_Input, {\n    value: localArea,\n    onChange: e => setLocalArea(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 15\n    }\n  }))), __jsx(_Col, {\n    lg: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 11\n    }\n  }, __jsx(_Form.Item, {\n    label: \"Area Unit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 13\n    }\n  }, __jsx(_Select, {\n    value: areaUnit,\n    onChange: e => setareaUnit(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 15\n    }\n  }, arealist && arealist.length !== 0 ? arealist.map((item, index) => {\n    return __jsx(_Select.Option, {\n      value: item.areaUnitCode,\n      key: item.areaUnitCode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 25\n      }\n    }, item.areaUnitName);\n  }) : \"No Records Found\")))), __jsx(_Alert, {\n    message: \"Add Images\",\n    type: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 9\n    }\n  }), __jsx(\"input\", {\n    type: \"file\",\n    multiple: true,\n    onChange: handleimage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 9\n    }\n  })), __jsx(_Alert, {\n    message: \"CONTACT DETAILS\",\n    type: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 7\n    }\n  }), __jsx(_Form, {\n    labelCol: {\n      span: 4\n    },\n    wrapperCol: {\n      span: 14\n    },\n    layout: \"horizontal\",\n    style: {\n      marginTop: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 7\n    }\n  }), __jsx(_Form, {\n    labelCol: {\n      span: 4\n    },\n    wrapperCol: {\n      span: 14\n    },\n    layout: \"horizontal\",\n    style: {\n      marginTop: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 7\n    }\n  }, __jsx(_Form.Item, {\n    label: \"Phone \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 9\n    }\n  }, __jsx(_Input, {\n    value: phone,\n    onChange: e => setPhone(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 11\n    }\n  })), __jsx(_Form.Item, {\n    label: \"Email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 9\n    }\n  }, __jsx(_Input, {\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 11\n    }\n  })), __jsx(\"center\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 9\n    }\n  }, __jsx(_Button, {\n    type: \"primary\",\n    size: \"large\",\n    onClick: submitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 11\n    }\n  }, \"Submit Property\"))));\n};\n\nexport default AddProperty;","map":{"version":3,"sources":["C:/wamp64/www/Reactapps/my-app/Apnaghar-frontend/TripFinder/packages/hotel-next/container/AddListing/AddProperty.js"],"names":["React","useState","useEffect","padding","axios","getPropType","getPropSubType","getCountries","getCities","getLocations","getCurrency","getArea","AddProperty","loading","setloading","imageUrl","setimageUrl","purpose","setpurpose","country","setCountry","city","setCity","location","setLocation","title","setTitle","details","setDetails","price","setPrice","pricecurrency","setCurrency","localArea","setLocalArea","areaUnit","setareaUnit","bedrooms","setBedrooms","bathrooms","setBathrooms","expireAfter","setExpireAfter","phone","setPhone","email","setEmail","files","setFiles","propdeveloper","setPropdeveloper","constructionStatus","setConstructionStatus","proptypedata","setproptypedata","citieslist","setciteslist","countrieslist","setcountrieslist","locationslist","setlocationslist","currencylist","setcurrencylist","proptypevalue","setproptypevalue","propsubtypedata","setpropsubtypedata","propsubtypedataall","setpropsubtypedataall","arealist","setarealist","propType","propsubType","cities","counties","locations","currency","area","response","Dragger","props","name","multiple","action","onChange","info","status","file","console","log","fileList","success","error","functproptype","functcities","functcountries","functcurrency","funcpropsbtype","functarea","data","functlocation","cityId","handleSetProperty","e","main_property_cat","target","value","filtered_sub_cat","filter","a","ptypeCat","handleimage","event","Array","from","submitHandler","formData","FormData","append","key","entries","method","url","headers","Authorization","Cookie","then","catch","TextArea","paddingLeft","paddingRight","span","marginTop","length","map","item","code","marginLeft","index","ptypeName","countryCode","countryName","cityName","plName","currencyCode","areaUnitCode","areaUnitName"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Radio,\r\n  Select,\r\n  Cascader,\r\n  DatePicker,\r\n  InputNumber,\r\n  TreeSelect,\r\n  Switch,\r\n  Alert,\r\n  Row,\r\n  Col,\r\n  Upload,\r\n  Icon,\r\n  message,\r\n  Card,\r\n} from \"antd\";\r\nimport { padding } from \"styled-system\";\r\nimport axios from \"axios\";\r\nimport {\r\n  getPropType,\r\n  getPropSubType,\r\n  getCountries,\r\n  getCities,\r\n  getLocations,\r\n  getCurrency,\r\n  getArea,\r\n} from \"../../settings/service\";\r\n\r\nconst AddProperty = () => {\r\n  const [loading, setloading] = useState(false);\r\n  const [imageUrl, setimageUrl] = useState(\"\");\r\n  const [purpose, setpurpose] = useState(\"\");\r\n  const [country, setCountry] = useState(\"\");\r\n  const [city, setCity] = useState(\"\");\r\n  const [location, setLocation] = useState(\"\");\r\n  const [title, setTitle] = useState(\"\");\r\n  const [details, setDetails] = useState(\"\");\r\n  const [price, setPrice] = useState(\"\");\r\n  const [pricecurrency, setCurrency] = useState(\"\");\r\n  const [localArea, setLocalArea] = useState(\"\");\r\n  const [areaUnit, setareaUnit] = useState(\"\");\r\n  const [bedrooms, setBedrooms] = useState(\"\");\r\n  const [bathrooms, setBathrooms] = useState(\"\");\r\n  const [expireAfter, setExpireAfter] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [files, setFiles] = useState([]);\r\n  const [propdeveloper, setPropdeveloper] = useState(\"\");\r\n  const [constructionStatus, setConstructionStatus] = useState(\"\");\r\n\r\n  // API RESULTS\r\n  const [proptypedata, setproptypedata] = useState([]);\r\n  const [citieslist, setciteslist] = useState([]);\r\n  const [countrieslist, setcountrieslist] = useState([]);\r\n  const [locationslist, setlocationslist] = useState([]);\r\n  const [currencylist, setcurrencylist] = useState([]);\r\n  const [proptypevalue, setproptypevalue] = useState([]);\r\n  const [propsubtypedata, setpropsubtypedata] = useState([]);\r\n  const [propsubtypedataall, setpropsubtypedataall] = useState([]);\r\n  const [arealist, setarealist] = useState([]);\r\n\r\n  let propType = \"\";\r\n  let propsubType = \"\";\r\n  let cities = \"\";\r\n  let counties = \"\";\r\n  let locations = \"\";\r\n  let currency = \"\";\r\n  let area = \"\";\r\n  let response = \"\";\r\n  const { Dragger } = Upload;\r\n\r\n  const props = {\r\n    name: \"file\",\r\n    multiple: true,\r\n    action: \"https://www.mocky.io/v2/5cc8019d300000980a055e76\",\r\n    onChange(info) {\r\n      const { status } = info.file;\r\n      if (status !== \"uploading\") {\r\n        console.log(info.file, info.fileList);\r\n      }\r\n      if (status === \"done\") {\r\n        message.success(`${info.file.name} file uploaded successfully.`);\r\n      } else if (status === \"error\") {\r\n        message.error(`${info.file.name} file upload failed.`);\r\n      }\r\n    },\r\n  };\r\n  useEffect(() => {\r\n    functproptype();\r\n    functcities();\r\n    functcountries();\r\n    functcurrency();\r\n    funcpropsbtype();\r\n    functarea();\r\n  }, []);\r\n\r\n  async function functproptype() {\r\n    propType = await getPropType();\r\n    setproptypedata(propType.data);\r\n  }\r\n  async function functcountries() {\r\n    counties = await getCountries();\r\n    setcountrieslist(counties.data);\r\n  }\r\n  async function functcities() {\r\n    cities = await getCities();\r\n    setciteslist(cities.data);\r\n  }\r\n  async function functlocation(cityId) {\r\n    locations = await getLocations(cityId);\r\n    setlocationslist(locations.data);\r\n  }\r\n  async function functcurrency() {\r\n    currency = await getCurrency();\r\n    setcurrencylist(currency.data);\r\n  }\r\n\r\n  async function funcpropsbtype() {\r\n    propsubType = await getPropSubType();\r\n    setpropsubtypedataall(propsubType.data);\r\n  }\r\n\r\n  async function functarea() {\r\n    area = await getArea();\r\n    setarealist(area.data);\r\n  }\r\n\r\n  const handleSetProperty = (e) => {\r\n    const main_property_cat = e.target.value;\r\n    setproptypevalue(e.target.value);\r\n    let filtered_sub_cat = propsubtypedataall.filter((a) => {\r\n      return a.ptypeCat == main_property_cat;\r\n    });\r\n    setpropsubtypedata(filtered_sub_cat);\r\n  };\r\n\r\n  const handleimage = (event) => {\r\n    console.log(\"images\", event.target.files);\r\n    setFiles(Array.from(event.target.files));\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    let formData = new FormData(); //formdata object\r\n    const data = `{  \"postPurpose\": \"${purpose}\", \r\n    \"propType\": ${proptypevalue},\r\n    \"postTitle\": \"${title}\",\r\n    \"postDescription\": \"${details}\",\r\n    \"postLocation\": \"${location}\",\r\n    \"postCity\": ${city},\r\n    \"postCountry\": \"${country}\", \r\n    \"postTel\": ${phone}, \r\n    \"postPrice\": ${price}, \r\n    \"postPriceCurrency\": \"${pricecurrency}\", \r\n    \"postPropArea\": ${localArea},\r\n    \"postPropAreaUnit\":\"${areaUnit}\",\r\n    \"postConstructionStatus\": \"${constructionStatus}\",\r\n    \"postPropDeveloper\": \"${propdeveloper}\"}`;\r\n    formData.append(\"newPost\", data);\r\n    formData.append(\"files\", files);\r\n    for (var key of formData.entries()) {\r\n      console.log(\"yai data\", key[0] + \", \" + key[1]);\r\n    }\r\n\r\n    axios({\r\n      method: \"post\",\r\n      url: `http://ec2-13-229-109-204.ap-southeast-1.compute.amazonaws.com:8080/apna/v1/posts`,\r\n      data: formData,\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n        Authorization: \"Basic YXBuYTphcG5hZ2hhcjEyMzQ=\",\r\n        Cookie: \"JSESSIONID=E2A8BF2571BA6B875803BD545D43BBD6\",\r\n      },\r\n    })\r\n      .then(function (response) {\r\n        //handle success\r\n        console.log(response.data);\r\n      })\r\n      .catch(function (response) {\r\n        //handle error\r\n        console.log(response);\r\n      });\r\n  };\r\n\r\n  const { TextArea } = Input;\r\n  return (\r\n    <Card style={{ paddingLeft: \"10rem\", paddingRight: \"10rem\" }}>\r\n      <Alert message=\"PROPERTY TYPE AND LOCATION\" type=\"success\" />\r\n      <Form\r\n        labelCol={{\r\n          span: 4,\r\n        }}\r\n        wrapperCol={{\r\n          span: 14,\r\n        }}\r\n        layout=\"horizontal\"\r\n        style={{ marginTop: \"20px\" }}\r\n      >\r\n        <Form.Item label=\"Purpose\">\r\n          <Radio.Group>\r\n            <Radio.Button onClick={(e) => setpurpose(e.target.value)} value=\"B\">\r\n              Buy\r\n            </Radio.Button>\r\n            <Radio.Button onClick={(e) => setpurpose(e.target.value)} value=\"R\">\r\n              Rent\r\n            </Radio.Button>\r\n            <Radio.Button onClick={(e) => setpurpose(e.target.value)} value=\"P\">\r\n              Project\r\n            </Radio.Button>\r\n          </Radio.Group>\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"Property Type\" name=\"size\">\r\n          <Radio.Group>\r\n            {proptypedata && proptypedata.length !== 0\r\n              ? proptypedata.map((item) => {\r\n                  return (\r\n                    <span key={item.code}>\r\n                      <Radio.Button\r\n                        value={item.code}\r\n                        onClick={handleSetProperty}\r\n                      >\r\n                        {item.name}\r\n                      </Radio.Button>\r\n                    </span>\r\n                  );\r\n                })\r\n              : \"No Records Found\"}\r\n          </Radio.Group>\r\n          <br></br>\r\n          <Radio.Group style={{ marginTop: \"5px\", marginLeft: \"20px\" }}>\r\n            {propsubtypedata && propsubtypedata.length !== 0\r\n              ? propsubtypedata.map((item, index) => {\r\n                  return (\r\n                    <span key={item.index}>\r\n                      <Radio.Button value={item.ptypeName}>\r\n                        {item.ptypeName}\r\n                      </Radio.Button>\r\n                    </span>\r\n                  );\r\n                })\r\n              : \"No Records Found\"}\r\n          </Radio.Group>\r\n        </Form.Item>\r\n        <Form.Item label=\"Select country\">\r\n          <Select\r\n            value={country}\r\n            onChange={(e) => {\r\n              setCountry(e);\r\n            }}\r\n          >\r\n            {countrieslist && countrieslist.length !== 0\r\n              ? countrieslist.map((item, index) => {\r\n                  return (\r\n                    <Select.Option\r\n                      value={item.countryCode}\r\n                      key={item.countryCode}\r\n                    >\r\n                      {item.countryName}\r\n                    </Select.Option>\r\n                  );\r\n                })\r\n              : \"No Records Found\"}\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item label=\"Select city\">\r\n          <Select\r\n            value={city}\r\n            onChange={(e) => {\r\n              setCity(e);\r\n              functlocation(e);\r\n            }}\r\n          >\r\n            {citieslist && citieslist.length !== 0\r\n              ? citieslist.map((item, index) => {\r\n                  return (\r\n                    <Select.Option value={item.cityId} key={item.cityId}>\r\n                      {item.cityName}\r\n                    </Select.Option>\r\n                  );\r\n                })\r\n              : \"No Records Found\"}\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item label=\"Select Location\">\r\n          <Select value={location} onChange={(e) => setLocation(e)}>\r\n            {locationslist && locationslist.length !== 0\r\n              ? locationslist.map((item, index) => {\r\n                  return (\r\n                    <Select.Option value={item.plName} key={item.plName}>\r\n                      {item.plName}\r\n                    </Select.Option>\r\n                  );\r\n                })\r\n              : \"No Records Found\"}\r\n          </Select>\r\n        </Form.Item>\r\n      </Form>\r\n      <Alert message=\"PROPERTY DETAILS\" type=\"success\" />\r\n      <Form\r\n        labelCol={{\r\n          span: 4,\r\n        }}\r\n        wrapperCol={{\r\n          span: 14,\r\n        }}\r\n        layout=\"horizontal\"\r\n        style={{ marginTop: \"20px\" }}\r\n      >\r\n        <Form.Item label=\"Property Title\">\r\n          <Input value={title} onChange={(e) => setTitle(e.target.value)} />\r\n        </Form.Item>\r\n        <Form.Item label=\"Property Details\">\r\n          <TextArea\r\n            value={details}\r\n            onChange={(e) => setDetails(e.target.value)}\r\n            rows={4}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item label=\"Property Developer\">\r\n          <Input\r\n            value={propdeveloper}\r\n            onChange={(e) => setPropdeveloper(e.target.value)}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item label=\"Construction Status\">\r\n          <Select\r\n            value={constructionStatus}\r\n            onChange={(e) => setConstructionStatus(e)}\r\n          >\r\n            <Select.Option value=\"C\">Completed</Select.Option>\r\n            <Select.Option value=\"U\">UNDERCONSTRUCTION</Select.Option>\r\n          </Select>\r\n        </Form.Item>\r\n        <Row>\r\n          <Col lg={12}>\r\n            <Form.Item label=\"All inclusive Price\">\r\n              <Input value={price} onChange={(e) => setPrice(e.target.value)} />\r\n            </Form.Item>\r\n          </Col>\r\n          <Col lg={12}>\r\n            <Form.Item label=\"Select Currency\">\r\n              <Select value={pricecurrency} onChange={(e) => setCurrency(e)}>\r\n                {currencylist && currencylist.length !== 0\r\n                  ? currencylist.map((item, index) => {\r\n                      return (\r\n                        <Select.Option\r\n                          value={item.currencyCode}\r\n                          key={item.currencyCode}\r\n                        >\r\n                          {item.currencyCode}\r\n                        </Select.Option>\r\n                      );\r\n                    })\r\n                  : \"No Records Found\"}\r\n              </Select>\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row>\r\n          <Col lg={12}>\r\n            <Form.Item label=\"Land Area\">\r\n              <Input\r\n                value={localArea}\r\n                onChange={(e) => setLocalArea(e.target.value)}\r\n              />\r\n            </Form.Item>\r\n          </Col>\r\n          <Col lg={12}>\r\n            <Form.Item label=\"Area Unit\">\r\n              <Select value={areaUnit} onChange={(e) => setareaUnit(e)}>\r\n                {arealist && arealist.length !== 0\r\n                  ? arealist.map((item, index) => {\r\n                      return (\r\n                        <Select.Option\r\n                          value={item.areaUnitCode}\r\n                          key={item.areaUnitCode}\r\n                        >\r\n                          {item.areaUnitName}\r\n                        </Select.Option>\r\n                      );\r\n                    })\r\n                  : \"No Records Found\"}\r\n              </Select>\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n        {/* <Form.Item label='Bedrooms'>\r\n          <Select\r\n            value={bedrooms}\r\n            onChange={(e) => setBedrooms(e.target.value)}\r\n          >\r\n            <Select.Option value='demo' selected>\r\n              Islamabad\r\n            </Select.Option>\r\n            <Select.Option value='1'>1</Select.Option>\r\n            <Select.Option value='2'>2</Select.Option>\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item label='Bathrooms'>\r\n          <Select\r\n            value={bathrooms}\r\n            onChange={(e) => setBathrooms(e.target.value)}\r\n          >\r\n            <Select.Option value='demo' selected>\r\n              Islamabad\r\n            </Select.Option>\r\n            <Select.Option value='1'>1</Select.Option>\r\n            <Select.Option value='2'>2</Select.Option>\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item label='Expires After'>\r\n          <Select\r\n            value={expireAfter}\r\n            onChange={(e) => setExpireAfter(e.target.value)}\r\n          >\r\n            <Select.Option value='6 Months' selected>\r\n              6 Months\r\n            </Select.Option>\r\n            <Select.Option value='1 Year'>1 Year</Select.Option>\r\n          </Select>\r\n        </Form.Item> */}\r\n        <Alert message=\"Add Images\" type=\"success\"></Alert>\r\n        <input type=\"file\" multiple onChange={handleimage} />\r\n      </Form>\r\n      <Alert message=\"CONTACT DETAILS\" type=\"success\" />\r\n      <Form\r\n        labelCol={{\r\n          span: 4,\r\n        }}\r\n        wrapperCol={{\r\n          span: 14,\r\n        }}\r\n        layout=\"horizontal\"\r\n        style={{ marginTop: \"20px\" }}\r\n      ></Form>\r\n      <Form\r\n        labelCol={{\r\n          span: 4,\r\n        }}\r\n        wrapperCol={{\r\n          span: 14,\r\n        }}\r\n        layout=\"horizontal\"\r\n        style={{ marginTop: \"20px\" }}\r\n      >\r\n        <Form.Item label=\"Phone \">\r\n          <Input value={phone} onChange={(e) => setPhone(e.target.value)} />\r\n        </Form.Item>\r\n        <Form.Item label=\"Email\">\r\n          <Input value={email} onChange={(e) => setEmail(e.target.value)} />\r\n        </Form.Item>\r\n        <center>\r\n          <Button type=\"primary\" size=\"large\" onClick={submitHandler}>\r\n            Submit Property\r\n          </Button>\r\n        </center>\r\n      </Form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default AddProperty;\r\n"]},"metadata":{},"sourceType":"module"}