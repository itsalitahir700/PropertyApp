{"ast":null,"code":"// Hook\nimport { useEffect } from 'react';\nexport function useOnClickOutside(ref, handler) {\n  useEffect(() => {\n    const listener = event => {\n      // Do nothing if clicking ref's element or descendent elements\n      if (!ref.current || ref.current.contains(event.target)) {\n        return;\n      }\n\n      handler(event);\n    };\n\n    document.addEventListener('mousedown', listener);\n    document.addEventListener('touchstart', listener);\n    return () => {\n      document.removeEventListener('mousedown', listener);\n      document.removeEventListener('touchstart', listener);\n    };\n  }, [ref, handler]); // Empty array ensures that effect is only run on mount and unmount\n}","map":{"version":3,"sources":["C:/wamp64/www/Reactapps/my-app/Apnaghar-frontend/TripFinder/packages/hotel-next/components/UI/ViewWithPopup/useOnClickOutside.js"],"names":["useEffect","useOnClickOutside","ref","handler","listener","event","current","contains","target","document","addEventListener","removeEventListener"],"mappings":"AAAA;AACA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAO,SAASC,iBAAT,CAA2BC,GAA3B,EAAgCC,OAAhC,EAAyC;AAC9CH,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMI,QAAQ,GAAGC,KAAK,IAAI;AACxB;AACA,UAAI,CAACH,GAAG,CAACI,OAAL,IAAgBJ,GAAG,CAACI,OAAJ,CAAYC,QAAZ,CAAqBF,KAAK,CAACG,MAA3B,CAApB,EAAwD;AACtD;AACD;;AAEDL,MAAAA,OAAO,CAACE,KAAD,CAAP;AACD,KAPD;;AASAI,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,EAAuCN,QAAvC;AACAK,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,YAA1B,EAAwCN,QAAxC;AAEA,WAAO,MAAM;AACXK,MAAAA,QAAQ,CAACE,mBAAT,CAA6B,WAA7B,EAA0CP,QAA1C;AACAK,MAAAA,QAAQ,CAACE,mBAAT,CAA6B,YAA7B,EAA2CP,QAA3C;AACD,KAHD;AAID,GAjBQ,EAiBN,CAACF,GAAD,EAAMC,OAAN,CAjBM,CAAT,CAD8C,CAkB1B;AACrB","sourcesContent":["// Hook\r\nimport { useEffect } from 'react';\r\nexport function useOnClickOutside(ref, handler) {\r\n  useEffect(() => {\r\n    const listener = event => {\r\n      // Do nothing if clicking ref's element or descendent elements\r\n      if (!ref.current || ref.current.contains(event.target)) {\r\n        return;\r\n      }\r\n\r\n      handler(event);\r\n    };\r\n\r\n    document.addEventListener('mousedown', listener);\r\n    document.addEventListener('touchstart', listener);\r\n\r\n    return () => {\r\n      document.removeEventListener('mousedown', listener);\r\n      document.removeEventListener('touchstart', listener);\r\n    };\r\n  }, [ref, handler]); // Empty array ensures that effect is only run on mount and unmount\r\n}\r\n"]},"metadata":{},"sourceType":"module"}